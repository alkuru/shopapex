#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, ProductCategory, Brand
    
    print("üìã –ê–ù–ê–õ–ò–ó –ö–ê–¢–ï–ì–û–†–ò–ô –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    categories = ProductCategory.objects.all()
    print(f"üìä –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {categories.count()}")
    print("\nüè∑Ô∏è  –°–ü–ò–°–û–ö –ö–ê–¢–ï–ì–û–†–ò–ô:")
    
    for category in categories:
        product_count = Product.objects.filter(category=category).count()
        print(f"   {category.id:2d}. {category.name} (—Ç–æ–≤–∞—Ä–æ–≤: {product_count})")
        if hasattr(category, 'description') and category.description:
            print(f"       –û–ø–∏—Å–∞–Ω–∏–µ: {category.description[:100]}...")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if product_count > 0:
            products = Product.objects.filter(category=category)[:3]
            for product in products:
                print(f"       - {product.article}: {product.name}")
        print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    products_without_category = Product.objects.filter(category__isnull=True)
    if products_without_category.exists():
        print(f"‚ö†Ô∏è  –¢–æ–≤–∞—Ä—ã –±–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: {products_without_category.count()}")
        for product in products_without_category[:5]:
            print(f"   - {product.article}: {product.name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    print("\nüîç –ü–†–û–í–ï–†–ö–ê –ù–ê –î–£–ë–õ–ò–ö–ê–¢–´:")
    category_names = {}
    for category in categories:
        name_lower = category.name.lower()
        if name_lower in category_names:
            print(f"‚ö†Ô∏è  –î—É–±–ª–∏–∫–∞—Ç –Ω–∞–π–¥–µ–Ω: '{category.name}' (ID: {category.id}) –∏ '{category_names[name_lower].name}' (ID: {category_names[name_lower].id})")
        else:
            category_names[name_lower] = category
    
    if not any(name_lower in category_names for name_lower in category_names if category_names.get(name_lower)):
        print("‚úÖ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    print("\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {Product.objects.count()}")
    print(f"   –í—Å–µ–≥–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {categories.count()}")
    print(f"   –í—Å–µ–≥–æ –±—Ä–µ–Ω–¥–æ–≤: {Brand.objects.count()}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
