#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ —Ä–µ–∞–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –±–∞–∑—ã
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, ProductAnalog, Brand, ProductCategory
    from catalog.supplier_models import Supplier
    
    print("üîç –ü–û–ò–°–ö –†–ï–ê–õ–¨–ù–´–• –ê–ù–ê–õ–û–ì–û–í")
    print("=" * 50)
    
    # –ë–µ—Ä–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    test_products = Product.objects.all()[:10]
    
    print(f"üì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º {test_products.count()} —Ç–æ–≤–∞—Ä–æ–≤:")
    for product in test_products:
        print(f"   {product.article}: {product.name} ({product.category})")
    
    print("\nüîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤...")
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    supplier = Supplier.objects.first()
    if not supplier:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
        sys.exit(1)
    
    for i, product in enumerate(test_products, 1):
        print(f"\n{i}. –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è {product.article}:")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤
            analogs_result = supplier.get_product_analogs(product.article)
            
            print(f"   üìä –†–µ–∑—É–ª—å—Ç–∞—Ç API: {type(analogs_result)}")
            
            if isinstance(analogs_result, dict):
                if 'analogs' in analogs_result:
                    analogs = analogs_result['analogs']
                    print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {len(analogs)}")
                    
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3 –∞–Ω–∞–ª–æ–≥–∞
                    for j, analog in enumerate(analogs[:3], 1):
                        if isinstance(analog, dict):
                            article = analog.get('article', 'N/A')
                            name = analog.get('name', 'N/A')
                            brand = analog.get('brand', 'N/A')
                            print(f"     {j}. {article} - {name} ({brand})")
                        else:
                            print(f"     {j}. {analog}")
                else:
                    print(f"   ‚ö†Ô∏è  –ù–µ—Ç –ø–æ–ª—è 'analogs' –≤ –æ—Ç–≤–µ—Ç–µ: {analogs_result}")
            
            elif isinstance(analogs_result, list):
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {len(analogs_result)}")
                for j, analog in enumerate(analogs_result[:3], 1):
                    print(f"     {j}. {analog}")
            
            elif isinstance(analogs_result, str):
                print(f"   ‚ö†Ô∏è  –°—Ç—Ä–æ–∫–æ–≤—ã–π –æ—Ç–≤–µ—Ç: {analogs_result}")
            
            else:
                print(f"   ‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –æ—Ç–≤–µ—Ç–∞: {analogs_result}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∞–Ω–∞–ª–æ–≥–æ–≤: {e}")
    
    print(f"\nüìà –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {Product.objects.count()}")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤ —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏: {Product.objects.filter(analogs__isnull=False).distinct().count()}")
    print(f"   –í—Å–µ–≥–æ —Å–≤—è–∑–µ–π –∞–Ω–∞–ª–æ–≥–æ–≤: {ProductAnalog.objects.count()}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
