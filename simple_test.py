#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç - –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ–ø–µ—Ä—å –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è —Ç–æ–≤–∞—Ä—ã –∏–∑ –æ–±–æ–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
"""

import requests
import json

def test_analog_search():
    print("=== –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ ===\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º OC47 Knecht/Mahle
    url = "http://localhost:8001/unified_search"
    params = {"article": "OC47", "brand": "Knecht/Mahle"}
    
    try:
        response = requests.get(url, params=params, timeout=30)
        
        if response.status_code == 200:
            data = response.json()
            debug = data.get('debug', {})
            
            print(f"‚úÖ API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω")
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   - –ê–≤—Ç–æ–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç (–æ—Å–Ω–æ–≤–Ω–æ–π): {debug.get('autokontinent_count', 0)}")
            print(f"   - –ê–≤—Ç–æ–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç (–∞–Ω–∞–ª–æ–≥–∏): {debug.get('autokontinent_analog_count', 0)}")
            print(f"   - –ê–≤—Ç–æ–°–ø—É—Ç–Ω–∏–∫: {debug.get('autosputnik_count', 0)}")
            print(f"   - –í—Å–µ–≥–æ: {debug.get('total_count', 0)}")
            
            analog_articles = debug.get('analog_articles_found', [])
            print(f"\nüîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –ê–≤—Ç–æ–ö–æ–Ω—Ç–∏–Ω–µ–Ω—Ç–µ:")
            for analog in analog_articles:
                print(f"   - {analog[0]} {analog[1]}")
            
            # –ò—â–µ–º C33010 –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö
            items = data.get('data', [])
            c33010_found = False
            for item in items:
                if item.get('article') == 'C33010':
                    c33010_found = True
                    print(f"\n‚úÖ –ù–ê–ô–î–ï–ù C33010!")
                    print(f"   –ë—Ä–µ–Ω–¥: {item.get('brand')}")
                    print(f"   –ò—Å—Ç–æ—á–Ω–∏–∫: {item.get('source')}")
                    print(f"   –°–∫–ª–∞–¥: {item.get('warehouse')}")
                    print(f"   –¶–µ–Ω–∞: {item.get('price')}")
                    break
            
            if not c33010_found:
                print(f"\n‚ùå C33010 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_analog_search()
