#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –±—Ä–µ–Ω–¥–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, Brand, ProductCategory
    
    print("üè∑Ô∏è  –ê–ù–ê–õ–ò–ó –ë–†–ï–ù–î–û–í –í –ë–ê–ó–ï –î–ê–ù–ù–´–•")
    print("=" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –±—Ä–µ–Ω–¥—ã
    brands = Brand.objects.all()
    print(f"üìä –í—Å–µ–≥–æ –±—Ä–µ–Ω–¥–æ–≤: {brands.count()}")
    print("\nüîç –°–ü–ò–°–û–ö –ë–†–ï–ù–î–û–í:")
    
    for brand in brands:
        product_count = Product.objects.filter(brand=brand).count()
        print(f"   {brand.id:2d}. {brand.name} (—Ç–æ–≤–∞—Ä–æ–≤: {product_count})")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ —ç—Ç–æ–≥–æ –±—Ä–µ–Ω–¥–∞
        if product_count > 0:
            products = Product.objects.filter(brand=brand)[:5]
            for product in products:
                print(f"       - {product.article}: {product.name}")
        print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–≤–∞—Ä—ã –±–µ–∑ –±—Ä–µ–Ω–¥–∞
    products_without_brand = Product.objects.filter(brand__isnull=True)
    if products_without_brand.exists():
        print(f"‚ö†Ô∏è  –¢–æ–≤–∞—Ä—ã –±–µ–∑ –±—Ä–µ–Ω–¥–∞: {products_without_brand.count()}")
        for product in products_without_brand[:5]:
            print(f"   - {product.article}: {product.name}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±—Ä–µ–Ω–¥–æ–≤
    print("\nüîß –ê–ù–ê–õ–ò–ó –ü–†–ê–í–ò–õ–¨–ù–û–°–¢–ò –ë–†–ï–ù–î–û–í:")
    
    # –†–µ–∞–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥—ã –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π
    real_brands = {
        'bosch': 'Bosch',
        'mann': 'Mann Filter', 
        'mahle': 'Mahle',
        'febi': 'Febi',
        'sachs': 'Sachs',
        'ate': 'ATE',
        'brembo': 'Brembo',
        'denso': 'Denso',
        'valeo': 'Valeo',
        'hella': 'Hella',
        'lemforder': 'Lemf√∂rder',
        'lemf√∂rder': 'Lemf√∂rder',
        'ngk': 'NGK',
        'continental': 'Continental',
        'gates': 'Gates',
        'pierburg': 'Pierburg',
        'zimmermann': 'Zimmermann'
    }
    
    wrong_brands = []
    correct_brands = []
    
    for brand in brands:
        brand_name_lower = brand.name.lower()
        if brand_name_lower in real_brands:
            correct_brands.append(brand)
            print(f"‚úÖ {brand.name} - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥")
        else:
            wrong_brands.append(brand)
            print(f"‚ùå {brand.name} - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π/–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –±—Ä–µ–Ω–¥")
    
    print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥—ã: {len(correct_brands)}")
    print(f"   –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥—ã: {len(wrong_brands)}")
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {Product.objects.count()}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –±—Ä–µ–Ω–¥–∞–º–∏
    print(f"\nüîç –ü–†–ò–ú–ï–†–´ –¢–û–í–ê–†–û–í –° –†–ï–ê–õ–¨–ù–´–ú–ò –ë–†–ï–ù–î–ê–ú–ò:")
    for brand in correct_brands[:5]:
        products = Product.objects.filter(brand=brand)[:2]
        for product in products:
            print(f"   {product.article} ({brand.name}): {product.name}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
