#!/usr/bin/env python
"""
–û—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
"""

import os
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def test_fixed():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥"""
    try:
        # –ù–∞—Ö–æ–¥–∏–º ABCP –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        supplier = Supplier.objects.filter(api_type='autoparts').first()
        
        if not supplier:
            print("‚ùå ABCP –ø–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
            
        print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {supplier.name}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥
        print(f"üéØ –í—ã–∑—ã–≤–∞–µ–º get_product_analogs...")
        success, result = supplier.get_product_analogs('1234567890', None, 5)
        
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: success={success}")
        if success:
            print(f"–ù–∞–π–¥–µ–Ω–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {result.get('total_found', 0)}")
            analogs = result.get('analogs', [])
            for analog in analogs[:3]:
                print(f"  - {analog.get('article')} {analog.get('brand')} - {analog.get('name')[:50]}...")
        else:
            print(f"–û—à–∏–±–∫–∞: {result}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_fixed()
