#!/usr/bin/env python
"""
–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API vinttop.ru
"""
import os
import sys
import django
import requests
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def test_different_endpoints():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"""
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    host = "46.226.167.12"
    login = "autovag@bk.ru"
    password = "0754"
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã URL –∏ –ø–æ—Ä—Ç–æ–≤
    test_configs = [
        {"url": f"http://{host}", "desc": "HTTP –ø–æ—Ä—Ç 80"},
        {"url": f"https://{host}", "desc": "HTTPS –ø–æ—Ä—Ç 443"},
        {"url": f"http://{host}:8080", "desc": "HTTP –ø–æ—Ä—Ç 8080"},
        {"url": f"http://{host}:3000", "desc": "HTTP –ø–æ—Ä—Ç 3000"},
        {"url": f"http://{host}:5000", "desc": "HTTP –ø–æ—Ä—Ç 5000"},
        {"url": f"http://{host}:8000", "desc": "HTTP –ø–æ—Ä—Ç 8000"},
    ]
    
    # –†–∞–∑–ª–∏—á–Ω—ã–µ endpoint'—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    endpoints = [
        "/",
        "/api",
        "/panel",
        "/panel/order/status",
        "/panel/parts/search/test",
        "/status",
        "/health",
    ]
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ vinttop.ru")
    print("=" * 70)
    
    for config in test_configs:
        base_url = config["url"]
        description = config["desc"]
        
        print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É—é {description}: {base_url}")
        print("-" * 50)
        
        for endpoint in endpoints:
            test_url = base_url + endpoint
            
            try:
                # –¢–µ—Å—Ç –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                print(f"   üîó {endpoint:<25} ", end="")
                
                response = requests.get(test_url, timeout=5)
                status = response.status_code
                
                if status == 200:
                    print(f"‚úÖ {status} - OK")
                    try:
                        data = response.json()
                        if isinstance(data, dict) and len(str(data)) < 200:
                            print(f"      üìÑ –û—Ç–≤–µ—Ç: {data}")
                    except:
                        content = response.text[:100]
                        if content.strip():
                            print(f"      üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {content}...")
                            
                elif status == 401:
                    print(f"üîê {status} - –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è")
                    
                    # –ü–æ–ø—Ä–æ–±—É–µ–º —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π
                    try:
                        auth_response = requests.get(test_url, auth=(login, password), timeout=5)
                        auth_status = auth_response.status_code
                        
                        if auth_status == 200:
                            print(f"      ‚úÖ –° –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π: {auth_status} - OK")
                            try:
                                auth_data = auth_response.json()
                                if isinstance(auth_data, dict) and len(str(auth_data)) < 200:
                                    print(f"      üìÑ –î–∞–Ω–Ω—ã–µ: {auth_data}")
                            except:
                                auth_content = auth_response.text[:100]
                                if auth_content.strip():
                                    print(f"      üìÑ –ö–æ–Ω—Ç–µ–Ω—Ç: {auth_content}...")
                        else:
                            print(f"      ‚ùå –° –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π: {auth_status}")
                            
                    except Exception as e:
                        print(f"      ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {str(e)[:50]}")
                        
                elif status in [403, 404, 405]:
                    print(f"‚ö†Ô∏è  {status} - Endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
                    
                elif status in [500, 502, 503]:
                    print(f"üî• {status} - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
                    
                else:
                    print(f"‚ùì {status} - –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å—Ç–∞—Ç—É—Å")
                    
            except requests.exceptions.ConnectTimeout:
                print(f"‚è±Ô∏è  –¢–∞–π–º–∞—É—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
                
            except requests.exceptions.ConnectionError as e:
                if "Connection refused" in str(e) or "10061" in str(e):
                    print(f"üö´ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ")
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)[:30]}")
                    
            except requests.exceptions.SSLError:
                print(f"üîí –û—à–∏–±–∫–∞ SSL/TLS")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)[:30]}")
    
    print("\n" + "=" * 70)
    print("üîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    print("=" * 70)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ —Ä–∞–±–æ—á–∏–µ URL —Å —Ä–∞–∑–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    working_configs = [
        f"http://{host}",
        f"http://{host}:8080",
        f"https://{host}",
    ]
    
    test_endpoints = [
        "/panel/order/status",
        "/api/order/status", 
        "/order/status",
        "/status",
    ]
    
    for base_url in working_configs:
        print(f"\nüì° –¢–µ—Å—Ç–∏—Ä—É—é –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –¥–ª—è: {base_url}")
        print("-" * 50)
        
        for endpoint in test_endpoints:
            test_url = base_url + endpoint
            print(f"   üîó {endpoint:<20} ", end="")
            
            # –ú–µ—Ç–æ–¥ 1: Basic Auth
            try:
                response = requests.get(test_url, auth=(login, password), timeout=5)
                if response.status_code == 200:
                    print(f"‚úÖ Basic Auth —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    try:
                        data = response.json()
                        print(f"      üìÑ –î–∞–Ω–Ω—ã–µ: {data}")
                        break
                    except:
                        pass
                        
            except:
                pass
            
            # –ú–µ—Ç–æ–¥ 2: POST —Å –¥–∞–Ω–Ω—ã–º–∏
            try:
                post_data = {"login": login, "password": password}
                response = requests.post(test_url, data=post_data, timeout=5)
                if response.status_code == 200:
                    print(f"‚úÖ POST –¥–∞–Ω–Ω—ã–µ —Ä–∞–±–æ—Ç–∞—é—Ç!")
                    break
                    
            except:
                pass
                
            # –ú–µ—Ç–æ–¥ 3: Headers
            try:
                headers = {"Authorization": f"Basic {login}:{password}"}
                response = requests.get(test_url, headers=headers, timeout=5)
                if response.status_code == 200:
                    print(f"‚úÖ Header –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    break
                    
            except:
                pass
                
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")

if __name__ == "__main__":
    test_different_endpoints()
