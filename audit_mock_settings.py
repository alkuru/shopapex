#!/usr/bin/env python3
"""
–ê—É–¥–∏—Ç Mock –∑–∞–≥–ª—É—à–µ–∫ –≤ –ø—Ä–æ–µ–∫—Ç–µ ShopApex
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier


def audit_mock_settings():
    """–ê—É–¥–∏—Ç –≤—Å–µ—Ö Mock –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ –ø—Ä–æ–µ–∫—Ç–µ"""
    print("üîç –ê–£–î–ò–¢ MOCK –ó–ê–ì–õ–£–®–ï–ö –í SHOPAPEX")
    print("=" * 60)
    print("üìÖ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ø–µ—Ä–µ—Ö–æ–¥—É –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–≤—Ç—Ä–∞")
    print("üéØ –°–∏—Å—Ç–µ–º–∞ —É–ø—Ä–æ—â–µ–Ω–∞ - —Ç–æ–ª—å–∫–æ VintTop.ru API")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
    all_suppliers = Supplier.objects.all()
    vinttop_suppliers = Supplier.objects.filter(name__icontains='VintTop')
    
    print("üìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print(f"   üìã –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: {all_suppliers.count()}")
    print(f"   üéØ VintTop –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: {vinttop_suppliers.count()}")
    print()
    
    if not all_suppliers.exists():
        print("‚ùå –û–®–ò–ë–ö–ê: –ü–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        print("üîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:")
        print("   1. –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ –ø—É—Å—Ç–∞")
        print("   2. –ú–∏–≥—Ä–∞—Ü–∏–∏ –Ω–µ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
        print("   3. –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –ë–î")
        return Supplier.objects.none()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –æ—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ VintTop.ru
    if all_suppliers.count() > 1:
        print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–∞–π–¥–µ–Ω–æ {all_suppliers.count()} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤, –æ–∂–∏–¥–∞–ª—Å—è —Ç–æ–ª—å–∫–æ 1 (VintTop.ru)")
        print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å clean_suppliers.py –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
    elif all_suppliers.count() == 1:
        vinttop = all_suppliers.first()
        if 'vinttop' not in vinttop.name.lower():
            print(f"‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ VintTop.ru: {vinttop.name}")
        else:
            print("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í —Å–∏—Å—Ç–µ–º–µ –æ—Å—Ç–∞–ª—Å—è —Ç–æ–ª—å–∫–æ VintTop.ru")
    
    # –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –ü–û–°–¢–ê–í–©–ò–ö–û–í:")
    print("-" * 60)
    
    for supplier in all_suppliers:
        print(f"\nüì° {supplier.name} (ID: {supplier.id})")
        print(f"   üè™ –¢–∏–ø API: {supplier.get_api_type_display()}")
        print(f"   ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if supplier.is_active else '–ù–µ—Ç'}")
        print(f"   üåê URL API: {supplier.api_url or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
        
        # API credentials
        print(f"   üë§ API –ª–æ–≥–∏–Ω: {'‚úÖ –ï—Å—Ç—å' if supplier.api_login else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        print(f"   üîë API –ø–∞—Ä–æ–ª—å: {'‚úÖ –ï—Å—Ç—å' if supplier.api_password else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
        
        # Admin credentials –¥–ª—è ABCP
        if 'abcp.ru' in (supplier.api_url or '').lower() or 'vinttop' in supplier.name.lower():
            print(f"   üëë Admin –ª–æ–≥–∏–Ω: {'‚úÖ –ï—Å—Ç—å' if supplier.admin_login else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
            print(f"   üîê Admin –ø–∞—Ä–æ–ª—å: {'‚úÖ –ï—Å—Ç—å' if supplier.admin_password else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
            print(f"   ü§ñ Mock —Ä–µ–∂–∏–º: {'üü° –í–ö–õ–Æ–ß–ï–ù' if supplier.use_mock_admin_api else 'üü¢ –í–´–ö–õ–Æ–ß–ï–ù'}")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã ABCP
            print(f"   üè¢ Office ID: {supplier.office_id or '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"   üì¶ –û–Ω–ª–∞–π–Ω —Å–∫–ª–∞–¥—ã: {'–î–∞' if supplier.use_online_stocks else '–ù–µ—Ç'}")
            print(f"   üöö –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {supplier.default_shipment_address}")
        else:
            print("   ‚ö†Ô∏è  –ù–µ ABCP –ø–æ—Å—Ç–∞–≤—â–∏–∫ - –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
    
    return all_suppliers


def check_mock_methods():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–¥–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è Mock –º–µ—Ç–æ–¥—ã –≤ –∫–æ–¥–µ"""
    print("\n\nüîß –ü–û–ò–°–ö MOCK –ú–ï–¢–û–î–û–í –í –ö–û–î–ï:")
    print("=" * 60)
    
    # –ì–ª–∞–≤–Ω—ã–π Mock –º–µ—Ç–æ–¥ –≤ models.py
    print("üìÅ catalog/models.py:")
    print("   ü§ñ _get_mock_admin_data() - –æ—Å–Ω–æ–≤–Ω–æ–π Mock –º–µ—Ç–æ–¥")
    print("   üîÑ _make_admin_request() - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç use_mock_admin_api")
    print("   ‚úÖ –í—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç —ç—Ç–æ—Ç –º–µ—Ö–∞–Ω–∏–∑–º")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã
    mock_methods = [
        "add_to_basket",
        "get_basket_content", 
        "clear_basket",
        "get_shipment_addresses",
        "create_order_from_basket",
        "search_batch",
        "get_search_history",
        "get_search_tips"
    ]
    
    print("\nüéØ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–´–ï –ú–ï–¢–û–î–´ –° MOCK –ü–û–î–î–ï–†–ñ–ö–û–ô:")
    for method in mock_methods:
        print(f"   ‚úÖ {method}()")
    
    return mock_methods


def create_production_checklist():
    """–°–æ–∑–¥–∞–µ—Ç —á–µ–∫–ª–∏—Å—Ç –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∫—à–µ–Ω"""
    print("\n\nüìã –ß–ï–ö–õ–ò–°–¢ –ü–ï–†–ï–•–û–î–ê –ù–ê –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï:")
    print("=" * 60)
    
    checklist = [
        "üîë –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ admin_login –∏ admin_password –æ—Ç VintTop",
        "ü§ñ –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ use_mock_admin_api=False (–¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∂–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ)",
        "üß™ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Å–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã",
        "üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ API –∑–∞–ø—Ä–æ—Å–æ–≤",
        "üîÑ –£–±–µ–¥–∏—Ç—å—Å—è —á—Ç–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫ –∞–∫—Ç–∏–≤–µ–Ω (is_active=True)",
        "üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å api_url",
        "üè¢ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å office_id –µ—Å–ª–∏ –Ω—É–∂–Ω–æ",
        "üì¶ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å use_online_stocks –µ—Å–ª–∏ –Ω—É–∂–Ω–æ",
        "üöö –ù–∞—Å—Ç—Ä–æ–∏—Ç—å default_shipment_address –µ—Å–ª–∏ –Ω—É–∂–Ω–æ",
        "üöÄ –ü—Ä–æ–≤–µ—Å—Ç–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ production"
    ]
    
    for i, item in enumerate(checklist, 1):
        print(f"   {i}. {item}")
    
    return checklist


def show_current_mock_status(suppliers):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å Mock —Ä–µ–∂–∏–º–æ–≤"""
    print("\n\nüéØ –¢–ï–ö–£–©–ò–ô –°–¢–ê–¢–£–° MOCK –†–ï–ñ–ò–ú–û–í:")
    print("=" * 60)
    
    mock_enabled = suppliers.filter(use_mock_admin_api=True)
    mock_disabled = suppliers.filter(use_mock_admin_api=False)
    
    print(f"ü§ñ –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ Mock —Ä–µ–∂–∏–º–µ: {mock_enabled.count()}")
    for supplier in mock_enabled:
        print(f"   üì° {supplier.name} - Mock –í–ö–õ–Æ–ß–ï–ù")
    
    print(f"\nüåê –ü–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ: {mock_disabled.count()}")
    for supplier in mock_disabled:
        print(f"   üì° {supplier.name} - Mock –í–´–ö–õ–Æ–ß–ï–ù")
        
    return mock_enabled, mock_disabled


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞—É–¥–∏—Ç–∞"""
    try:
        # –ê—É–¥–∏—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤
        suppliers = audit_mock_settings()
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ Mock –º–µ—Ç–æ–¥–æ–≤
        mock_methods = check_mock_methods()
        
        # –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å
        mock_enabled, mock_disabled = show_current_mock_status(suppliers)
        
        # –ß–µ–∫–ª–∏—Å—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        checklist = create_production_checklist()
        
        # –ò—Ç–æ–≥–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print("\n\nüöÄ –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò –î–õ–Ø –ó–ê–í–¢–†–ê:")
        print("=" * 60)
        
        if mock_enabled.count() > 0:
            print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –∞–∫—Ç–∏–≤–Ω—ã–µ Mock —Ä–µ–∂–∏–º—ã!")
            print(f"   üìä {mock_enabled.count()} –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –≤ Mock —Ä–µ–∂–∏–º–µ")
            print("   üéØ –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –≤—ã–≥—Ä—É–∑–∫–∏ –Ω—É–∂–Ω–æ:")
            print("      1. –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ admin credentials")
            print("      2. –û—Ç–∫–ª—é—á–∏—Ç—å use_mock_admin_api")
            print("      3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
        else:
            print("‚úÖ –û—Ç–ª–∏—á–Ω–æ! –í—Å–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º")
            print("   üöÄ –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–∞–ª—å–Ω–æ–π –≤—ã–≥—Ä—É–∑–∫–µ")
            if suppliers.count() == 1:
                supplier = suppliers.first()
                print(f"   üì° –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
                if supplier.admin_login and supplier.admin_password:
                    print("   üîë Admin credentials –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
                    print("   üéØ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å ABCP –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º API")
                else:
                    print("   ‚ö†Ô∏è  Admin credentials —Ç—Ä–µ–±—É—é—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏")
        
        print(f"\nüìä –ò–¢–û–ì–û–í–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   ü§ñ Mock —Ä–µ–∂–∏–º–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {mock_enabled.count()}")
        print(f"   üåê –†–µ–∞–ª—å–Ω—ã—Ö —Ä–µ–∂–∏–º–æ–≤: {mock_disabled.count()}")
        print(f"   üîß Mock –º–µ—Ç–æ–¥–æ–≤ –≤ –∫–æ–¥–µ: {len(mock_methods)}")
        print(f"   üìã –ü—É–Ω–∫—Ç–æ–≤ –≤ —á–µ–∫–ª–∏—Å—Ç–µ: {len(checklist)}")
        print(f"   üì¶ –í—Å–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤: {suppliers.count()}")
        
        return mock_enabled.count() == 0
        
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –∞—É–¥–∏—Ç–∞: {e}")
        import traceback
        traceback.print_exc()
        return False


if __name__ == "__main__":
    print("üîç –ó–∞–ø—É—Å–∫ –∞—É–¥–∏—Ç–∞ Mock –∑–∞–≥–ª—É—à–µ–∫...")
    ready_for_production = main()
    
    if ready_for_production:
        print("\nüéâ –†–ï–ó–£–õ–¨–¢–ê–¢: –ü—Ä–æ–µ–∫—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–µ–∞–ª—å–Ω–æ–π –≤—ã–≥—Ä—É–∑–∫–µ!")
    else:
        print("\n‚ö†Ô∏è  –†–ï–ó–£–õ–¨–¢–ê–¢: –¢—Ä–µ–±—É–µ—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–∞–ª—å–Ω–æ–π –≤—ã–≥—Ä—É–∑–∫–æ–π!")
