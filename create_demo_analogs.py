#!/usr/bin/env python3
"""
–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã
"""

import os
import sys
import django
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, ProductAnalog, Brand, ProductCategory
    
    print("üîß –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ê–ù–ê–õ–û–ì–û–í")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–Ω–∞–ª–æ–≥–æ–≤
    products = Product.objects.all()[:20]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 20 —Ç–æ–≤–∞—Ä–æ–≤
    
    total_analogs_created = 0
    
    for i, product in enumerate(products, 1):
        print(f"\n[{i}/{products.count()}] –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–æ–≥–∏ –¥–ª—è: {product.article} - {product.name}")
        
        # –°–æ–∑–¥–∞–µ–º 2-3 –∞–Ω–∞–ª–æ–≥–∞ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–≤–∞—Ä–∞
        num_analogs = random.randint(1, 3)
        
        for j in range(num_analogs):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∞—Ä—Ç–∏–∫—É–ª –∞–Ω–∞–ª–æ–≥–∞
            analog_article = f"{product.article}-A{j+1}"
            
            # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –±—Ä–µ–Ω–¥ –∏–∑ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö
            brands = Brand.objects.all()
            if brands:
                analog_brand = random.choice(brands)
            else:
                analog_brand = product.brand
            
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–≤–∞—Ä-–∞–Ω–∞–ª–æ–≥
            analog_product, created = Product.objects.get_or_create(
                article=analog_article,
                defaults={
                    'name': f'–ê–Ω–∞–ª–æ–≥ {product.name}',
                    'category': product.category,
                    'brand': analog_brand,
                    'price': product.price + random.uniform(-500, 500),
                    'description': f"–ê–Ω–∞–ª–æ–≥ –¥–ª—è {product.article}"
                }
            )
            
            if created:
                print(f"   ‚ûï –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä-–∞–Ω–∞–ª–æ–≥: {analog_product.article} ({analog_brand.name})")
            
            # –°–æ–∑–¥–∞–µ–º —Å–≤—è–∑—å –∞–Ω–∞–ª–æ–≥–∞
            analog_relation, created = ProductAnalog.objects.get_or_create(
                product=product,
                analog_product=analog_product
            )
            
            if created:
                print(f"   üîó –°–æ–∑–¥–∞–Ω–∞ —Å–≤—è–∑—å: {product.article} -> {analog_product.article}")
                total_analogs_created += 1
    
    print(f"\nüéâ –°–û–ó–î–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print(f"‚úÖ –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {total_analogs_created}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_products = Product.objects.count()
    products_with_analogs = Product.objects.filter(analogs__isnull=False).distinct().count()
    
    print(f"üìä –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ: {total_products}")
    print(f"üìä –¢–æ–≤–∞—Ä–æ–≤ —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏: {products_with_analogs}")
    print(f"üìä –í—Å–µ–≥–æ —Å–≤—è–∑–µ–π –∞–Ω–∞–ª–æ–≥–æ–≤: {ProductAnalog.objects.count()}")
    
    # –ü–æ–∫–∞–∂–µ–º –ø—Ä–∏–º–µ—Ä—ã
    print(f"\nüìã –ü–†–ò–ú–ï–†–´ –¢–û–í–ê–†–û–í –° –ê–ù–ê–õ–û–ì–ê–ú–ò:")
    for product in Product.objects.filter(analogs__isnull=False).distinct()[:5]:
        analog_count = product.analogs.count()
        print(f"   {product.article} - {product.name} ({analog_count} –∞–Ω–∞–ª–æ–≥–æ–≤)")
        for analog in product.analogs.all():
            print(f"     ‚Üí {analog.analog_product.article} - {analog.analog_product.name} ({analog.analog_product.brand.name})")
    
except Exception as e:
    print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
