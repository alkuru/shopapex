#!/usr/bin/env python
"""
–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –º–µ—Ç–æ–¥–∞ get_product_analogs
"""
import os
import sys
import django
import traceback

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def test_get_product_analogs_direct():
    """–ü—Ä—è–º–æ–π —Ç–µ—Å—Ç –º–µ—Ç–æ–¥–∞ get_product_analogs"""
    
    print("üîç –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç get_product_analogs...")
    print("=" * 50)
    
    try:
        supplier = Supplier.objects.filter(is_active=True, api_type='autoparts').first()
        
        if not supplier:
            print("‚ùå –ù–µ—Ç –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤")
            return
        
        print(f"üì¶ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ –Ω–∞–ø—Ä—è–º—É—é
        print(f"\nüîç –í—ã–∑—ã–≤–∞–µ–º get_product_analogs('test123')...")
        
        try:
            success, result = supplier.get_product_analogs('test123')
            print(f"‚úÖ –ú–µ—Ç–æ–¥ –≤—ã–ø–æ–ª–Ω–∏–ª—Å—è –±–µ–∑ –∏—Å–∫–ª—é—á–µ–Ω–∏–π")
            print(f"   –£—Å–ø–µ—Ö: {success}")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
            
            if success:
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç!")
                if isinstance(result, dict):
                    analogs = result.get('analogs', [])
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {len(analogs)}")
                else:
                    print(f"   ‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º: {type(result)}")
            else:
                print(f"   ‚ö†Ô∏è –ù–µ—É—Å–ø–µ—à–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
                
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê –≤ get_product_analogs: {e}")
            traceback.print_exc()
            
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()

if __name__ == "__main__":
    test_get_product_analogs_direct()
