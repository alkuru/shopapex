#!/usr/bin/env python
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import MikadoProduct

def main():
    print("=== –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú –° –ë–†–ï–ù–î–ê–ú–ò MIKADO ===")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Å–æ—á–µ—Ç–∞–Ω–∏—è
    suspicious_cases = [
        {
            "brand": "MANN-FILTER",
            "suspicious_keywords": ["–¥–∏—Å–∫", "—Ç–æ—Ä–º–æ–∑–Ω–æ–π", "–∫–æ–ª–æ–¥–∫–∏", "–±–∞—Ä–∞–±–∞–Ω", "—Ä–æ—Ç–æ—Ä"],
            "description": "MANN-FILTER –¥–µ–ª–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã, –Ω–µ —Ç–æ—Ä–º–æ–∑–∞"
        },
        {
            "brand": "BOSCH",
            "suspicious_keywords": ["—Ñ–∏–ª—å—Ç—Ä –º–∞—Å–ª—è–Ω—ã–π", "—Ñ–∏–ª—å—Ç—Ä –≤–æ–∑–¥—É—à–Ω—ã–π", "—Ñ–∏–ª—å—Ç—Ä —Ç–æ–ø–ª–∏–≤–Ω—ã–π"],
            "description": "–ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å—Ç—Ä–æ–≤ BOSCH"
        },
        {
            "brand": "Knecht/Mahle", 
            "suspicious_keywords": ["–¥–∏—Å–∫", "—Ç–æ—Ä–º–æ–∑–Ω–æ–π", "–∫–æ–ª–æ–¥–∫–∏", "—Å–≤–µ—á–∞"],
            "description": "Knecht/Mahle –¥–µ–ª–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã –∏ –ø–æ—Ä—à–Ω–∏, –Ω–µ —Ç–æ—Ä–º–æ–∑–∞"
        },
        {
            "brand": "FILTRON",
            "suspicious_keywords": ["–¥–∏—Å–∫", "—Ç–æ—Ä–º–æ–∑–Ω–æ–π", "–∫–æ–ª–æ–¥–∫–∏", "–∞–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä"],
            "description": "FILTRON –¥–µ–ª–∞–µ—Ç —Ñ–∏–ª—å—Ç—Ä—ã, –Ω–µ –¥—Ä—É–≥–∏–µ –¥–µ—Ç–∞–ª–∏"
        }
    ]
    
    total_problems = 0
    
    for case in suspicious_cases:
        brand = case["brand"]
        keywords = case["suspicious_keywords"]
        description = case["description"]
        
        print(f"\n=== {brand} ===")
        print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞: {description}")
        
        brand_products = MikadoProduct.objects.filter(brand=brand)
        brand_count = brand_products.count()
        print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ —Å –±—Ä–µ–Ω–¥–æ–º {brand}: {brand_count}")
        
        if brand_count == 0:
            continue
            
        # –ò—â–µ–º –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
        suspicious_products = []
        for keyword in keywords:
            found = brand_products.filter(name__icontains=keyword)
            for product in found:
                suspicious_products.append({
                    "article": product.article,
                    "name": product.name,
                    "keyword": keyword,
                    "brand": product.brand
                })
        
        if suspicious_products:
            print(f"‚ùå –ù–ê–ô–î–ï–ù–û {len(suspicious_products)} –ø–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤:")
            for i, prod in enumerate(suspicious_products[:10]):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 10
                print(f"  {i+1}. {prod['article']} | {prod['name'][:80]}...")
                total_problems += 1
        else:
            print(f"‚úÖ –ü–æ–¥–æ–∑—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
    
    print(f"\n=== –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê ===")
    print(f"–í—Å–µ–≥–æ –ø—Ä–æ–±–ª–µ–º –Ω–∞–π–¥–µ–Ω–æ: {total_problems}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥—ã
    print(f"\n=== –ê–ù–ê–õ–ò–ó –û–†–ò–ì–ò–ù–ê–õ–¨–ù–´–• –ë–†–ï–ù–î–û–í ===")
    
    # –ù–∞—Ö–æ–¥–∏–º —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –±—ã—Ç—å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏–∑–º–µ–Ω–µ–Ω—ã
    problem_articles = [
        "610.3718.20",  # –î–∏—Å–∫ —Ç–æ—Ä–º–æ–∑–Ω–æ–π –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        "610.3719.20",
        "610.3715.20"
    ]
    
    for article in problem_articles:
        products = MikadoProduct.objects.filter(article=article)
        if products.exists():
            product = products.first()
            print(f"\n–ê—Ä—Ç–∏–∫—É–ª: {article}")
            print(f"–¢–µ–∫—É—â–∏–π –±—Ä–µ–Ω–¥: {product.brand}")
            print(f"–û–ø–∏—Å–∞–Ω–∏–µ: {product.name}")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥ –ø–æ –æ–ø–∏—Å–∞–Ω–∏—é
            name_lower = product.name.lower()
            if "zimmermann" in name_lower:
                print(f"üí° –í–æ–∑–º–æ–∂–Ω—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥: ZIMMERMANN")
            elif "brembo" in name_lower:
                print(f"üí° –í–æ–∑–º–æ–∂–Ω—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥: BREMBO")
            elif "bosch" in name_lower and "–¥–∏—Å–∫" in name_lower:
                print(f"üí° –í–æ–∑–º–æ–∂–Ω—ã–π –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥: BOSCH (—Ç–æ—Ä–º–æ–∑–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞)")
            else:
                print(f"üí° –ù—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥")

if __name__ == '__main__':
    main() 