#!/usr/bin/env python
import pandas as pd

def main():
    file_path = "import/SPB-MSK_0033749_250725.xlsx"
    
    print(f"=== –ê–ù–ê–õ–ò–ó –§–ê–ô–õ–ê: {file_path} ===")
    
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(file_path)
        print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: {len(df)}")
        print(f"–ö–æ–ª–æ–Ω–∫–∏ –≤ —Ñ–∞–π–ª–µ: {list(df.columns)}")
        
        # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –±—Ä–µ–Ω–¥–∞–º–∏
        brand_columns = [col for col in df.columns if any(word in col.lower() for word in ['brand', '–±—Ä–µ–Ω–¥', '–º–∞—Ä–∫–∞', 'manufacturer'])]
        
        if brand_columns:
            brand_col = brand_columns[0]
            print(f"\n–ö–æ–ª–æ–Ω–∫–∞ —Å –±—Ä–µ–Ω–¥–∞–º–∏: {brand_col}")
            
            # –ò—â–µ–º –∫–æ–ª–æ–Ω–∫—É —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏
            article_columns = [col for col in df.columns if any(word in col.lower() for word in ['article', '–∞—Ä—Ç–∏–∫—É–ª', '–∫–æ–¥', 'part', '–Ω–æ–º–µ—Ä'])]
            
            if article_columns:
                article_col = article_columns[0]
                print(f"–ö–æ–ª–æ–Ω–∫–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏: {article_col}")
                
                # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞—Ä—Ç–∏–∫—É–ª—ã
                problem_articles = ["610.3718.20", "610.3719.20", "610.3715.20"]
                
                for article in problem_articles:
                    # –ò—â–µ–º —Ç–æ–≤–∞—Ä –≤ —Ñ–∞–π–ª–µ (—Ç–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ)
                    exact_mask = df[article_col].astype(str) == article
                    partial_mask = df[article_col].astype(str).str.contains(article, case=False, na=False)
                    
                    found_products = df[exact_mask | partial_mask]
                    
                    if not found_products.empty:
                        product = found_products.iloc[0]
                        original_brand = product[brand_col]
                        original_article = product[article_col]
                        print(f"\nüìã –ù–ê–ô–î–ï–ù: {original_article}")
                        print(f"   –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥: '{original_brand}'")
                        
                        # –ò—â–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ
                        desc_cols = [col for col in df.columns if any(word in col.lower() for word in ['name', 'description', '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–æ–ø–∏—Å–∞–Ω–∏–µ', '—Ç–æ–≤–∞—Ä'])]
                        if desc_cols:
                            desc_col = desc_cols[0]
                            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {product[desc_col]}")
                    else:
                        print(f"\n‚ùå –ê—Ä—Ç–∏–∫—É–ª {article} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ñ–∞–π–ª–µ")
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –±—Ä–µ–Ω–¥—ã –∏–∑ —Ñ–∞–π–ª–∞
                unique_brands = df[brand_col].dropna().unique()
                print(f"\n–í—Å–µ–≥–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤ –≤ —Ñ–∞–π–ª–µ: {len(unique_brands)}")
                print(f"–ü–µ—Ä–≤—ã–µ 30 –±—Ä–µ–Ω–¥–æ–≤:")
                for i, brand in enumerate(unique_brands[:30], 1):
                    count = (df[brand_col] == brand).sum()
                    print(f"  {i:2d}. '{brand}' ({count} —Ç–æ–≤–∞—Ä–æ–≤)")
                
                # –ò—â–µ–º –±—Ä–µ–Ω–¥—ã —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤
                print(f"\n=== –ü–û–ò–°–ö –ë–†–ï–ù–î–û–í –¢–û–†–ú–û–ó–ù–´–• –î–ò–°–ö–û–í ===")
                desc_cols = [col for col in df.columns if any(word in col.lower() for word in ['name', 'description', '–Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ', '–æ–ø–∏—Å–∞–Ω–∏–µ', '—Ç–æ–≤–∞—Ä'])]
                if desc_cols:
                    desc_col = desc_cols[0]
                    brake_discs = df[df[desc_col].str.contains('–¥–∏—Å–∫ —Ç–æ—Ä–º–æ–∑–Ω–æ–π', case=False, na=False)]
                    
                    if not brake_discs.empty:
                        brake_brands = brake_discs[brand_col].value_counts()
                        print(f"–ë—Ä–µ–Ω–¥—ã —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤:")
                        for brand, count in brake_brands.head(10).items():
                            print(f"  {brand}: {count} —Ç–æ–≤–∞—Ä–æ–≤")
                    else:
                        print("–¢–æ—Ä–º–æ–∑–Ω—ã–µ –¥–∏—Å–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –æ–ø–∏—Å–∞–Ω–∏—è—Ö")
                
            else:
                print("‚ùå –ö–æ–ª–æ–Ω–∫–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
                
        else:
            print("‚ùå –ö–æ–ª–æ–Ω–∫–∞ —Å –±—Ä–µ–Ω–¥–∞–º–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
            print("–ü–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ —Ñ–∞–π–ª–∞:")
            print(df.head())
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞: {e}")

if __name__ == '__main__':
    main() 