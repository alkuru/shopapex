#!/usr/bin/env python
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API id16251.public.api.abcp.ru
"""
import os
import sys
import django
import requests
from requests.auth import HTTPBasicAuth
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

def diagnose_abcp_api():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API ABCP"""
    
    api_url = "https://id16251.public.api.abcp.ru"
    login = "autovag@bk.ru"
    password = "0754"
    
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ABCP API")
    print("=" * 60)
    print(f"API URL: {api_url}")
    print(f"–õ–æ–≥–∏–Ω: {login}")
    print(f"–ü–∞—Ä–æ–ª—å: {password}")
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤
    headers = {
        'User-Agent': 'ShopApex/1.0 (AutoParts Integration)',
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Accept-Language': 'ru-RU,ru;q=0.9,en;q=0.8',
    }
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    print(f"\nüîß –¢–ï–°–¢ 1: –ë–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ")
    try:
        response = requests.get(
            api_url,
            headers=headers,
            auth=HTTPBasicAuth(login, password),
            timeout=10
        )
        print(f"‚úÖ –°—Ç–∞—Ç—É—Å –∫–æ–¥: {response.status_code}")
        print(f"‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:")
        for key, value in response.headers.items():
            print(f"   {key}: {value}")
        
        print(f"‚úÖ –†–∞–∑–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        # –ü—Ä–æ–±—É–µ–º —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
        try:
            json_data = response.json()
            print(f"‚úÖ JSON —É—Å–ø–µ—à–Ω–æ —Ä–∞—Å–ø–∞—Ä—Å–µ–Ω:")
            print(f"   {json.dumps(json_data, indent=2, ensure_ascii=False)[:500]}...")
        except:
            content = response.text[:500]
            print(f"‚úÖ –¢–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç (–ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤):")
            print(f"   {content}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑–æ–≤–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
    
    # –¢–µ—Å—Ç 2: –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã ABCP API
    endpoints = [
        "/",
        "/ping", 
        "/test",
        "/status",
        "/brands",
        "/search",
        "/catalogs",
        "/products",
        "/articles",
        "/parts"
    ]
    
    print(f"\nüîß –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ ABCP API")
    for endpoint in endpoints:
        full_url = api_url + endpoint
        print(f"\nüîé –¢–µ—Å—Ç–∏—Ä—É–µ–º: {endpoint}")
        
        try:
            response = requests.get(
                full_url,
                headers=headers,
                auth=HTTPBasicAuth(login, password),
                timeout=5
            )
            
            print(f"   ‚úÖ –°—Ç–∞—Ç—É—Å: {response.status_code}")
            content_type = response.headers.get('content-type', '')
            print(f"   ‚úÖ Content-Type: {content_type}")
            
            if response.status_code == 200:
                if 'json' in content_type.lower():
                    try:
                        json_data = response.json()
                        print(f"   ‚úÖ JSON: {str(json_data)[:100]}...")
                    except:
                        print(f"   ‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON")
                else:
                    content = response.text[:100]
                    print(f"   ‚úÖ –¢–µ–∫—Å—Ç: {content}...")
            elif response.status_code == 400:
                print(f"   ‚ö†Ô∏è  Bad Request - –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω—ã –ø–∞—Ä–∞–º–µ—Ç—Ä—ã")
            elif response.status_code == 401:
                print(f"   üîê Unauthorized - –ø—Ä–æ–±–ª–µ–º—ã —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π")
            elif response.status_code == 404:
                print(f"   ‚ùå Not Found")
            else:
                print(f"   ‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å")
                
        except requests.exceptions.Timeout:
            print(f"   ‚è∞ –¢–∞–π–º-–∞—É—Ç")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: POST –∑–∞–ø—Ä–æ—Å—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    print(f"\nüîß –¢–ï–°–¢ 3: POST –∑–∞–ø—Ä–æ—Å—ã —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏")
    
    # –¢–∏–ø–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ ABCP API
    search_params = {
        "number": "0986424815",  # –¢–µ—Å—Ç–æ–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª
        "type": "article"
    }
    
    try:
        response = requests.post(
            api_url + "/search",
            headers=headers,
            auth=HTTPBasicAuth(login, password),
            json=search_params,
            timeout=10
        )
        
        print(f"‚úÖ POST /search —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            try:
                json_data = response.json()
                print(f"‚úÖ POST JSON —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {str(json_data)[:200]}...")
            except:
                print(f"‚ö†Ô∏è  POST: –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON")
        else:
            print(f"‚ö†Ô∏è  POST –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"    –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            
    except Exception as e:
        print(f"‚ùå POST –æ—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–ø—Ä–æ–±—É–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ URL
    print(f"\nüîß –¢–ï–°–¢ 4: GET —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤ URL")
    
    try:
        params = {
            'number': '0986424815',
            'format': 'json'
        }
        
        response = requests.get(
            api_url + "/search",
            headers=headers,
            auth=HTTPBasicAuth(login, password),
            params=params,
            timeout=10
        )
        
        print(f"‚úÖ GET —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"‚úÖ URL –∑–∞–ø—Ä–æ—Å–∞: {response.url}")
        
        if response.status_code == 200:
            try:
                json_data = response.json()
                print(f"‚úÖ GET —Ä–µ–∑—É–ª—å—Ç–∞—Ç: {str(json_data)[:200]}...")
            except:
                print(f"‚ö†Ô∏è  GET: –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON")
        else:
            print(f"‚ö†Ô∏è  GET –æ—à–∏–±–∫–∞: {response.status_code}")
            print(f"    –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            
    except Exception as e:
        print(f"‚ùå GET –æ—à–∏–±–∫–∞: {e}")
    
    print(f"\nüìã –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
    print(f"1. –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 400 - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∑–∞–ø—Ä–æ—Å–∞")
    print(f"2. –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 401 - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω/–ø–∞—Ä–æ–ª—å")
    print(f"3. –ï—Å–ª–∏ –ø–æ–ª—É—á–∏–ª–∏ 200 - API —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω—É–∂–Ω–æ –∏–∑—É—á–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞")
    print(f"4. –ò–∑—É—á–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é ABCP API –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")

if __name__ == "__main__":
    diagnose_abcp_api()
