#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞ K20PBR-S10 —Å VintTop
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.supplier_models import Supplier
    
    print("üîç –ó–ê–ì–†–£–ó–ö–ê –¢–û–í–ê–†–ê K20PBR-S10 –° VINTTOP")
    print("=" * 50)
    
    # –ù–∞–π–¥–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop
    supplier = Supplier.objects.filter(name__icontains='VintTop').first()
    
    if not supplier:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ VintTop –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)
    
    print(f"‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
    
    # –ò—â–µ–º —Ç–æ–≤–∞—Ä K20PBR-S10
    article = "K20PBR-S10"
    print(f"üîç –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞: {article}")
    
    result = supplier.get_product_analogs(article)
    
    if isinstance(result, dict) and result.get('success'):
        products = result.get('products', [])
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        for i, product in enumerate(products[:3], 1):
            print(f"\n{i}. –ê—Ä—Ç–∏–∫—É–ª: {product.get('article', 'N/A')}")
            print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {product.get('name', 'N/A')}")
            print(f"   –¶–µ–Ω–∞: {product.get('price', 'N/A')} —Ä—É–±.")
            print(f"   –ë—Ä–µ–Ω–¥: {product.get('brand', 'N/A')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {result}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
