#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Ä—Ç–∏–∫—É–ª–∞ CA31110 - –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ AutoKontinent –∏ AutoSputnik
"""
import os
import sys
import django
import requests
from bs4 import BeautifulSoup

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import AutoKontinentProduct

def test_ca31110():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞—Ä—Ç–∏–∫—É–ª CA31110
    """
    print("=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–†–¢–ò–ö–£–õ–ê CA31110 ===\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä –≤ –±–∞–∑–µ AutoKontinent
    try:
        ak_product = AutoKontinentProduct.objects.get(article='CA31110')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –≤ AutoKontinent:")
        print(f"   –ë—Ä–µ–Ω–¥: {ak_product.brand}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {ak_product.name}")
        print(f"   –ù–∞–ª–∏—á–∏–µ –°–ü–±: {ak_product.stock_spb}")
        print(f"   –ù–∞–ª–∏—á–∏–µ –ú–°–ö: {ak_product.stock_msk}")
        print(f"   –¶–µ–Ω–∞: {ak_product.price}")
    except AutoKontinentProduct.DoesNotExist:
        print("‚ùå –¢–æ–≤–∞—Ä CA31110 –ù–ï –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ AutoKontinent")
        return
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –≤–µ–±
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ï–ë-–ü–û–ò–°–ö–ê ===")
    test_web_search('CA31110', ak_product.brand)

def test_web_search(article, brand):
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–∞
    """
    try:
        url = "http://web:8000/catalog/search/"
        params = {
            'q': article,
            'brand': brand
        }
        
        response = requests.get(url, params=params, timeout=30)
        
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            
            # –ò—â–µ–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å —ç—Ç–∏–º –∞—Ä—Ç–∏–∫—É–ª–æ–º
            product_rows = soup.find_all('tr')
            all_products = []
            autokontinent_products = []
            autosputnik_products = []
            
            for row in product_rows:
                cells = row.find_all('td')
                if len(cells) >= 7:
                    article_cell = cells[0]
                    warehouse_cell = cells[5]
                    
                    if article_cell and article in article_cell.get_text():
                        all_products.append(row)
                        
                        if warehouse_cell and '–¶–° –ê–ö' in warehouse_cell.get_text():
                            autokontinent_products.append(row)
                        elif warehouse_cell and '—Å—Ç–æ—Ä–æ–Ω–Ω–∏–π' in warehouse_cell.get_text():
                            autosputnik_products.append(row)
            
            print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞:")
            print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ {article}: {len(all_products)}")
            print(f"   AutoKontinent —Ç–æ–≤–∞—Ä–æ–≤: {len(autokontinent_products)}")
            print(f"   AutoSputnik —Ç–æ–≤–∞—Ä–æ–≤: {len(autosputnik_products)}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
            if all_products:
                print(f"\nüìã –í—Å–µ —Ç–æ–≤–∞—Ä—ã {article} –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ:")
                for i, row in enumerate(all_products, 1):
                    cells = row.find_all('td')
                    if len(cells) >= 7:
                        article_text = cells[0].get_text().strip()
                        brand_text = cells[1].get_text().strip()
                        name_text = cells[2].get_text().strip()
                        availability = cells[3].get_text().strip()
                        delivery_time = cells[4].get_text().strip()
                        warehouse = cells[5].get_text().strip()
                        price = cells[6].get_text().strip()
                        
                        print(f"   {i}. {article_text} {brand_text}")
                        print(f"      {name_text}")
                        print(f"      –ù–∞–ª–∏—á–∏–µ: {availability}, –°—Ä–æ–∫: {delivery_time}")
                        print(f"      –°–∫–ª–∞–¥: {warehouse}, –¶–µ–Ω–∞: {price}")
                        print()
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Ä—è–¥–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤
            print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—è–¥–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤:")
            if autokontinent_products:
                first_ak = autokontinent_products[0]
                cells = first_ak.find_all('td')
                if len(cells) >= 7:
                    warehouse = cells[5].get_text().strip()
                    print(f"   ‚úÖ –ü–µ—Ä–≤—ã–π AutoKontinent —Ç–æ–≤–∞—Ä: {warehouse}")
            else:
                print(f"   ‚ùå AutoKontinent —Ç–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
            if autosputnik_products:
                first_as = autosputnik_products[0]
                cells = first_as.find_all('td')
                if len(cells) >= 7:
                    warehouse = cells[5].get_text().strip()
                    print(f"   ‚úÖ –ü–µ—Ä–≤—ã–π AutoSputnik —Ç–æ–≤–∞—Ä: {warehouse}")
            else:
                print(f"   ‚ùå AutoSputnik —Ç–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")

def test_without_autokontinent():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –∏–∑ AutoKontinent
    """
    print("\n=== –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó AUTOKONTINENT ===")
    print("‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –≠—Ç–æ—Ç —Ç–µ—Å—Ç —É–¥–∞–ª–∏—Ç —Ç–æ–≤–∞—Ä CA31110 –∏–∑ –±–∞–∑—ã AutoKontinent!")
    
    response = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/n): ")
    if response.lower() != 'y':
        print("–¢–µ—Å—Ç –æ—Ç–º–µ–Ω–µ–Ω")
        return
    
    try:
        # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ AutoKontinent
        AutoKontinentProduct.objects.filter(article='CA31110').delete()
        print("‚úÖ –¢–æ–≤–∞—Ä CA31110 —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã AutoKontinent")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
        test_web_search('CA31110', '')
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    test_ca31110()
    # test_without_autokontinent()  # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑ AutoKontinent 