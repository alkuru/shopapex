#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è C30005
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, ProductAnalog
    from django.db import models
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ê–ù–ê–õ–û–ì–û–í –î–õ–Ø C30005")
    print("=" * 40)
    
    # –ù–∞–π–¥–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä
    main_product = Product.objects.get(article='C30005')
    print(f"‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ç–æ–≤–∞—Ä: {main_product.article} - {main_product.name}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –∞–Ω–∞–ª–æ–≥–∏
    analogs = main_product.analogs.all()
    print(f"üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {analogs.count()}")
    
    for i, analog_relation in enumerate(analogs, 1):
        analog = analog_relation.analog_product
        print(f"{i}. {analog.article} - {analog.name}")
        print(f"   –ë—Ä–µ–Ω–¥: {analog.brand.name}")
        print(f"   –¶–µ–Ω–∞: {analog.price} —Ä—É–±.")
        print()
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤ –ø–æ–∏—Å–∫–µ
    search_results = Product.objects.filter(
        models.Q(article__icontains='C30005') | 
        models.Q(name__icontains='C30005')
    ).distinct()
    
    print(f"üîç –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –ø–æ 'C30005': {search_results.count()}")
    for product in search_results:
        print(f"   - {product.article}: {product.name}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
