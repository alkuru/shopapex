#!/usr/bin/env python
"""
–û—Ç–ª–∞–¥–∫–∞ ABCP API –∑–∞–ø—Ä–æ—Å–æ–≤
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def debug_supplier_api():
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"""
    
    print("üîç –û—Ç–ª–∞–¥–∫–∞ ABCP API...")
    print("=" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        supplier = Supplier.objects.filter(is_active=True, api_type='autoparts').first()
        
        if not supplier:
            print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ —Å —Ç–∏–ø–æ–º 'autoparts'")
            return
        
        print(f"üì¶ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {supplier.name}")
        print(f"üîó API URL: {supplier.api_url}")
        print(f"üë§ Login: {supplier.api_login}")
        print(f"üè¢ Office ID: {supplier.office_id}")
        print(f"üìç Shipment Address: {supplier.default_shipment_address}")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞ 'test123'...")
        success, result = supplier.get_product_analogs('test123')
        
        print(f"‚úÖ –£—Å–ø–µ—Ö: {success}")
        print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API...")
        success, message = supplier.test_api_connection()
        
        print(f"‚úÖ –£—Å–ø–µ—Ö: {success}")
        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –±—Ä–µ–Ω–¥–æ–≤
        print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –±—Ä–µ–Ω–¥–æ–≤ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞ 'test123'...")
        try:
            success, brands = supplier.get_abcp_brands('test123')
            print(f"‚úÖ –£—Å–ø–µ—Ö: {success}")
            print(f"üìä –ë—Ä–µ–Ω–¥—ã: {brands}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –±—Ä–µ–Ω–¥–æ–≤: {e}")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    debug_supplier_api()
