import os
import requests
import hashlib

API_HOST = os.environ.get('VIN_API_HOST')
API_LOGIN = os.environ.get('VIN_API_LOGIN')
API_PASSWORD = os.environ.get('VIN_API_PASSWORD')

# –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ md5-—Ö—ç—à–µ!
def get_md5_hash(password):
    return hashlib.md5(password.encode('utf-8')).hexdigest()

API_URL = f"https://{API_HOST}/search/articles/"

def normalize_brand(brand):
    if not brand:
        return None
    # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –±—Ä–µ–Ω–¥ –¥–ª—è –ø–æ–∏—Å–∫–∞
    normalized = brand.strip().lower().replace(' ', '').replace('-', '').replace('/', '')
    
    # –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –±—Ä–µ–Ω–¥–∞ Mann
    if normalized in ['mann', 'mannfilter']:
        return 'MANN-FILTER'
    
    # –û—Å–æ–±—ã–µ —Å–ª—É—á–∞–∏ –¥–ª—è –±—Ä–µ–Ω–¥–∞ Mahle
    if normalized in ['mahle', 'knechtmahle']:
        return 'Knecht/Mahle'
    
    return brand

def get_purchase_price(article, brand=None):
    """
    –ü–æ–ª—É—á–∏—Ç—å –∑–∞–∫—É–ø–æ—á–Ω—É—é —Ü–µ–Ω—É –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞ —á–µ—Ä–µ–∑ API ABCP
    """
    params = {
        'userlogin': API_LOGIN,
        'userpsw': get_md5_hash(API_PASSWORD),
        'number': article,
        'format': 'json',
    }
    if brand:
        params['brand'] = normalize_brand(brand)
    
    print(f"\nüîç –ü–æ–∏—Å–∫ —Ü–µ–Ω—ã –¥–ª—è {article}, –±—Ä–µ–Ω–¥: {brand} -> {normalize_brand(brand)}")
    
    response = requests.get(API_URL, params=params, timeout=10)
    if response.status_code == 200:
        data = response.json()
        if isinstance(data, dict):
            items = data.get('search', [])
        elif isinstance(data, list):
            items = data
        else:
            items = []
        
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {len(items)}")
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –±—Ä–µ–Ω–¥—É –∏ –ø–æ–∏—Å–∫ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Ü–µ–Ω—ã
        norm_brand = normalize_brand(brand) if brand else None
        brand_items = []
        
        for i, item in enumerate(items):
            item_brand = item.get('brand', '').strip()
            item_price = item.get('price', 0)
            print(f"  {i+1}. –ë—Ä–µ–Ω–¥: '{item_brand}' -> –¶–µ–Ω–∞: {item_price}")
            
            if norm_brand:
                # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ–±–∞ –±—Ä–µ–Ω–¥–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
                item_brand_norm = normalize_brand(item_brand)
                if item_brand_norm == norm_brand:
                    brand_items.append(item)
                    print(f"    ‚úÖ –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: '{item_brand}' -> '{item_brand_norm}' == '{norm_brand}'")
                elif item_brand == norm_brand:
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è
                    brand_items.append(item)
                    print(f"    ‚úÖ –ü—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å {norm_brand}")
                elif brand.lower().replace(' ', '').replace('-', '') in item_brand.lower().replace(' ', '').replace('-', '') or item_brand.lower().replace(' ', '').replace('-', '') in brand.lower().replace(' ', '').replace('-', ''):
                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–∞—Å—Ç–∏—á–Ω–æ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ
                    brand_items.append(item)
                    print(f"    ‚úÖ –ß–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ: '{item_brand}' —Å–æ–¥–µ—Ä–∂–∏—Ç '{brand}'")
        
        print(f"üéØ –ü–æ–¥—Ö–æ–¥—è—â–∏—Ö –ø–æ –±—Ä–µ–Ω–¥—É: {len(brand_items)}")
        
        # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –±—Ä–µ–Ω–¥—É ‚Äî –∏—â–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Ü–µ–Ω—É
        if brand_items:
            min_item = min(brand_items, key=lambda x: float(x['price']))
            print(f"üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ –ø–æ –±—Ä–µ–Ω–¥—É: {min_item['price']}")
            return float(min_item['price'])
        
        print("‚ùå –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π –ø–æ –Ω—É–∂–Ω–æ–º—É –±—Ä–µ–Ω–¥—É –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return None
    
    print(f"‚ùå API –≤–µ—Ä–Ω—É–ª –∫–æ–¥: {response.status_code}")
    # –ï—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ ‚Äî –ø—Ä–æ–±—É–µ–º –∞—Ä—Ç–∏–∫—É–ª –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–ª—ç—à–µ–π
    alt_article = article.replace(' ', '').replace('/', '').upper()
    if alt_article != article:
        params['number'] = alt_article
        response = requests.get(API_URL, params=params, timeout=10)
        if response.status_code == 200:
            data = response.json()
            if isinstance(data, dict):
                items = data.get('search', [])
            elif isinstance(data, list):
                items = data
            else:
                items = []
            found = None
            if norm_brand:
                for item in items:
                    item_brand = item.get('brand', '').strip().upper().replace(' ', '').replace('-', '')
                    if item_brand == norm_brand.replace('-', '').upper():
                        found = item
                        break
            if not found and items:
                found = items[0]
            if found:
                return float(found['price'])
    return None
