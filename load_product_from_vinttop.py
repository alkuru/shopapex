#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–∞ K20PBR-S10 —Å VintTop —á–µ—Ä–µ–∑ ABCP API
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, Brand, ProductCategory
    from catalog.supplier_models import Supplier
    
    print("üîÑ –ó–ê–ì–†–£–ó–ö–ê –¢–û–í–ê–†–ê K20PBR-S10 –° VINTTOP")
    print("=" * 50)
    
    # –ù–∞–π–¥–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop
    try:
        supplier = Supplier.objects.get(name__icontains='VintTop')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
    except Supplier.DoesNotExist:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ VintTop –Ω–µ –Ω–∞–π–¥–µ–Ω")
        sys.exit(1)
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
    article_code = "K20PBR-S10"
    
    print(f"üîç –ò—â–µ–º —Ç–æ–≤–∞—Ä: {article_code}")
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Ç–æ–≤–∞—Ä–µ
    result = supplier.get_product_analogs(article_code)
    
    print(f"ÔøΩ –¢–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {type(result)}")
    print(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ result - —ç—Ç–æ dict
    if not isinstance(result, dict):
        print("‚ùå –ú–µ—Ç–æ–¥ –≤–µ—Ä–Ω—É–ª –Ω–µ —Å–ª–æ–≤–∞—Ä—å, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥")
        result = {'success': False, 'error': '–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ç–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞'}
    
    print(f"ÔøΩüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞: success={result.get('success')}")
    
    if result.get('success') and result.get('analogs'):
        analogs = result.get('analogs', [])
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(analogs)}")
        
        for i, analog in enumerate(analogs, 1):
            print(f"\n{i}. –¢–æ–≤–∞—Ä:")
            print(f"   –ê—Ä—Ç–∏–∫—É–ª: {analog.get('article', 'N/A')}")
            print(f"   –ë—Ä–µ–Ω–¥: {analog.get('brand', 'N/A')}")
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {analog.get('description', 'N/A')}")
            print(f"   –¶–µ–Ω–∞: {analog.get('price', 'N/A')}")
            
            # –°–æ–∑–¥–∞–¥–∏–º —Ç–æ–≤–∞—Ä –≤ –Ω–∞—à–µ–π –±–∞–∑–µ
            brand_name = analog.get('brand', 'Unknown')
            
            # –ù–∞–π–¥–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º –±—Ä–µ–Ω–¥
            brand, created = Brand.objects.get_or_create(
                name=brand_name,
                defaults={'is_active': True}
            )
            if created:
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω –±—Ä–µ–Ω–¥: {brand_name}")
            
            # –ù–∞–π–¥–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º –¥–µ—Ñ–æ–ª—Ç–Ω—É—é
            category, created = ProductCategory.objects.get_or_create(
                name='–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏',
                defaults={
                    'description': '–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ —Å –≤–Ω–µ—à–Ω–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤',
                    'is_active': True
                }
            )
            if created:
                print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: –ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏")
            
            # –°–æ–∑–¥–∞–¥–∏–º —Ç–æ–≤–∞—Ä
            product, created = Product.objects.get_or_create(
                article=analog.get('article', article_code),
                defaults={
                    'name': analog.get('description', f'–¢–æ–≤–∞—Ä {analog.get("article", article_code)}'),
                    'brand': brand,
                    'category': category,
                    'price': float(analog.get('price', 0)) if analog.get('price') else 100.0,
                    'description': f'–ó–∞–≥—Ä—É–∂–µ–Ω —Å {supplier.name}',
                    'stock_quantity': 1,
                    'is_active': True
                }
            )
            
            if created:
                print(f"   ‚úÖ –¢–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω –≤ –±–∞–∑–µ: {product.article}")
            else:
                print(f"   ‚ÑπÔ∏è  –¢–æ–≤–∞—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {product.article}")
                
    else:
        print(f"‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        print("\nüí° –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å —Ç–æ–≤–∞—Ä –≤—Ä—É—á–Ω—É—é —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
        
        # –°–æ–∑–¥–∞–¥–∏–º —Ç–æ–≤–∞—Ä —Å –±–∞–∑–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        brand, _ = Brand.objects.get_or_create(
            name='Unknown',
            defaults={'is_active': True}
        )
        
        category, _ = ProductCategory.objects.get_or_create(
            name='–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏',
            defaults={
                'description': '–ê–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏ —Å –≤–Ω–µ—à–Ω–∏—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤',
                'is_active': True
            }
        )
        
        product, created = Product.objects.get_or_create(
            article=article_code,
            defaults={
                'name': f'–¢–æ–≤–∞—Ä {article_code}',
                'brand': brand,
                'category': category,
                'price': 100.0,
                'description': f'–¢–æ–≤–∞—Ä {article_code} - —Ç—Ä–µ–±—É–µ—Ç —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö',
                'stock_quantity': 0,
                'is_active': True
            }
        )
        
        if created:
            print(f"   ‚úÖ –ë–∞–∑–æ–≤—ã–π —Ç–æ–≤–∞—Ä —Å–æ–∑–¥–∞–Ω: {product.article}")
        else:
            print(f"   ‚ÑπÔ∏è  –¢–æ–≤–∞—Ä —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {product.article}")
    
    print(f"\nüéØ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"üß™ –¢–ï–°–¢ –í –ë–†–ê–£–ó–ï–†–ï:")
    print(f"http://127.0.0.1:8000/catalog/search/?q={article_code}")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
