#!/usr/bin/env python3
"""
–ó–∞–≥—Ä—É–∑–∫–∞ 10 —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –±—Ä–µ–Ω–¥–∞ Mann –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, Brand, ProductCategory
    
    print("üì¶ –ó–ê–ì–†–£–ó–ö–ê 10 –¢–û–í–ê–†–û–í MANN")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –±—Ä–µ–Ω–¥ Mann
    brand, _ = Brand.objects.get_or_create(name='Mann')
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞—ë–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –§–∏–ª—å—Ç—Ä—ã
    category, _ = ProductCategory.objects.get_or_create(name='–§–∏–ª—å—Ç—Ä—ã')
    
    products_data = [
        {"article": "C 35 154", "name": "–í–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann C 35 154", "purchase_price": 1200},
        {"article": "W 914/2", "name": "–ú–∞—Å–ª—è–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann W 914/2", "purchase_price": 650},
        {"article": "HU 719/7 x", "name": "–ú–∞—Å–ª—è–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann HU 719/7 x", "purchase_price": 900},
        {"article": "CUK 2545", "name": "–°–∞–ª–æ–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann CUK 2545", "purchase_price": 1100},
        {"article": "C 25 024", "name": "–í–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann C 25 024", "purchase_price": 1050},
        {"article": "WK 820/17", "name": "–¢–æ–ø–ª–∏–≤–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann WK 820/17", "purchase_price": 1700},
        {"article": "C 27 125", "name": "–í–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann C 27 125", "purchase_price": 1300},
        {"article": "W 75/3", "name": "–ú–∞—Å–ª—è–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann W 75/3", "purchase_price": 600},
        {"article": "C 30 195", "name": "–í–æ–∑–¥—É—à–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann C 30 195", "purchase_price": 1250},
        {"article": "CU 2939", "name": "–°–∞–ª–æ–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä Mann CU 2939", "purchase_price": 950},
    ]
    
    for p in products_data:
        product, created = Product.objects.get_or_create(
            article=p["article"],
            defaults={
                "name": p["name"],
                "category": category,
                "brand": brand,
                "purchase_price": p["purchase_price"],
                "price": p["purchase_price"],
                "description": f"{p['name']} (–±—Ä–µ–Ω–¥ Mann)"
            }
        )
        if not created:
            product.name = p["name"]
            product.category = category
            product.brand = brand
            product.purchase_price = p["purchase_price"]
            product.price = p["purchase_price"]
            product.description = f"{p['name']} (–±—Ä–µ–Ω–¥ Mann)"
            product.save()
            print(f"‚ôªÔ∏è  –û–±–Ω–æ–≤–ª—ë–Ω: {product.article} ‚Äî {product.name} (–∑–∞–∫—É–ø–æ—á–Ω–∞—è {product.purchase_price})")
        else:
            print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω: {product.article} ‚Äî {product.name} (–∑–∞–∫—É–ø–æ—á–Ω–∞—è {product.purchase_price})")
    print("\nüéâ –ó–ê–ì–†–£–ó–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!")
    print(f"–í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤ Mann: {Product.objects.filter(brand=brand).count()}")
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
