#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å ABCP API
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier
from django.utils import timezone

def test_abcp_integration():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—É—é –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å ABCP API"""
    
    print("=" * 60)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –£–õ–£–ß–®–ï–ù–ù–û–ô –ò–ù–¢–ï–ì–†–ê–¶–ò–ò –° ABCP API")
    print("=" * 60)
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ ABCP
    try:
        vinttop_supplier = Supplier.objects.filter(
            api_type='autoparts'
        ).first()
        
        if not vinttop_supplier:
            print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ —Å API –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: {vinttop_supplier.name}")
        print(f"   URL API: {vinttop_supplier.api_url}")
        print(f"   –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –ª–æ–≥–∏–Ω: {vinttop_supplier.api_login}")
        print(f"   Admin –ª–æ–≥–∏–Ω: {vinttop_supplier.admin_login or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"   Office ID: {vinttop_supplier.office_id or '–ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω'}")
        print(f"   –û–Ω–ª–∞–π–Ω —Å–∫–ª–∞–¥—ã: {'–î–∞' if vinttop_supplier.use_online_stocks else '–ù–µ—Ç'}")
        print(f"   –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {vinttop_supplier.default_shipment_address}")
        print(f"   Mock —Ä–µ–∂–∏–º: {'–î–∞' if vinttop_supplier.use_mock_admin_api else '–ù–µ—Ç'}")
        print()
        
        # 1. –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–≥–æ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        print("1. –¢–ï–°–¢ –ë–ê–ó–û–í–û–ì–û API –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø")
        print("-" * 40)
        success, message = vinttop_supplier.test_api_connection()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print(f"   –°–æ–æ–±—â–µ–Ω–∏–µ: {message}")
        print()
        
        # 2. –¢–µ—Å—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ API
        print("2. –¢–ï–°–¢ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–ò–í–ù–û–ì–û API")
        print("-" * 40)
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        success, data = vinttop_supplier.get_staff_list()
        print(f"   –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        if success and isinstance(data, dict) and 'managers' in data:
            print(f"   –ù–∞–π–¥–µ–Ω–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {len(data['managers'])}")
        else:
            print(f"   –û—Ç–≤–µ—Ç: {data}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
        success, data = vinttop_supplier.get_delivery_methods()
        print(f"   –°–ø–æ—Å–æ–±—ã –¥–æ—Å—Ç–∞–≤–∫–∏: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        if success and isinstance(data, dict) and 'delivery_methods' in data:
            print(f"   –ù–∞–π–¥–µ–Ω–æ —Å–ø–æ—Å–æ–±–æ–≤: {len(data['delivery_methods'])}")
        else:
            print(f"   –û—Ç–≤–µ—Ç: {data}")
        
        # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–æ–≤ –∑–∞–∫–∞–∑–æ–≤
        success, data = vinttop_supplier.get_order_statuses()
        print(f"   –°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        if success and isinstance(data, dict) and 'statuses' in data:
            print(f"   –ù–∞–π–¥–µ–Ω–æ —Å—Ç–∞—Ç—É—Å–æ–≤: {len(data['statuses'])}")
        else:
            print(f"   –û—Ç–≤–µ—Ç: {data}")
        print()
        
        # 3. –¢–µ—Å—Ç –º–µ—Ç–æ–¥–æ–≤ –∫–æ—Ä–∑–∏–Ω—ã
        print("3. –¢–ï–°–¢ –ú–ï–¢–û–î–û–í –ö–û–†–ó–ò–ù–´")
        print("-" * 40)
        
        # –¢–µ—Å—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∫–æ—Ä–∑–∏–Ω—ã
        success, data = vinttop_supplier.get_basket_content()
        print(f"   –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–æ—Ä–∑–∏–Ω—ã: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print(f"   –û—Ç–≤–µ—Ç: {data}")
        
        # –¢–µ—Å—Ç –∞–¥—Ä–µ—Å–æ–≤ –¥–æ—Å—Ç–∞–≤–∫–∏
        success, data = vinttop_supplier.get_shipment_addresses()
        print(f"   –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print(f"   –û—Ç–≤–µ—Ç: {data}")
        print()
        
        # 4. –¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        print("4. –¢–ï–°–¢ –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –ü–û–ò–°–ö–ê")
        print("-" * 40)
        
        # –¢–µ—Å—Ç –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∏—Å–∫–∞
        success, data = vinttop_supplier.get_search_history()
        print(f"   –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∏—Å–∫–∞: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print(f"   –û—Ç–≤–µ—Ç: {data}")
        
        # –¢–µ—Å—Ç –ø–æ–¥—Å–∫–∞–∑–æ–∫ –ø–æ–∏—Å–∫–∞
        success, data = vinttop_supplier.get_search_tips("0108")
        print(f"   –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ–∏—Å–∫–∞: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print(f"   –û—Ç–≤–µ—Ç: {data}")
        
        # –¢–µ—Å—Ç –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
        search_items = [
            {'number': '0108', 'brand': 'Febi'},
            {'number': '333305', 'brand': 'KYB'}
        ]
        success, data = vinttop_supplier.search_batch(search_items)
        print(f"   –ü–∞–∫–µ—Ç–Ω—ã–π –ø–æ–∏—Å–∫: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        print(f"   –û—Ç–≤–µ—Ç: {data}")
        print()
        
        # 5. –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        print("5. –¢–ï–°–¢ –ü–û–ò–°–ö–ê –° –ù–û–í–´–ú–ò –ü–ê–†–ê–ú–ï–¢–†–ê–ú–ò")
        print("-" * 40)
        
        success, data = vinttop_supplier.search_products_by_article("0986424815", "BOSCH")
        print(f"   –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞: {'‚úÖ –£—Å–ø–µ—à–Ω–æ' if success else '‚ùå –û—à–∏–±–∫–∞'}")
        if success and isinstance(data, list) and len(data) > 0:
            print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π: {len(data)}")
            for item in data[:2]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
                if isinstance(item, dict):
                    print(f"     - {item.get('brand', 'N/A')} {item.get('number', 'N/A')}: {item.get('description', 'N/A')}")
        else:
            print(f"   –û—Ç–≤–µ—Ç: {data}")
        print()
        
        # 6. –°–≤–æ–¥–∫–∞ –ø–æ –ø–æ–ª—è–º –º–æ–¥–µ–ª–∏
        print("6. –ü–†–û–í–ï–†–ö–ê –ù–û–í–´–• –ü–û–õ–ï–ô –ú–û–î–ï–õ–ò")
        print("-" * 40)
        print(f"   office_id: {vinttop_supplier.office_id or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"   use_online_stocks: {vinttop_supplier.use_online_stocks}")
        print(f"   default_shipment_address: {vinttop_supplier.default_shipment_address}")
        print(f"   admin_login: {vinttop_supplier.admin_login or '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"   admin_password: {'–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if vinttop_supplier.admin_password else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"   use_mock_admin_api: {vinttop_supplier.use_mock_admin_api}")
        print()
        
        print("=" * 60)
        print("–†–ï–ó–£–õ–¨–¢–ê–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print("=" * 60)
        print("‚úÖ –ú–æ–¥–µ–ª—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞ —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ ABCP API")
        print("‚úÖ –ú–µ—Ç–æ–¥—ã –∫–æ—Ä–∑–∏–Ω—ã —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã")
        print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –ø–æ–∏—Å–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω—ã")
        print("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤ mock —Ä–µ–∂–∏–º–µ")
        print("‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–æ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ (officeId, useOnlineStocks, shipmentAddress)")
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞")
        print()
        print("üìù –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("   1. –î–ª—è —Ä–∞–±–æ—Ç—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ —É–∫–∞–∂–∏—Ç–µ admin_login –∏ admin_password")
        print("   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ office_id –µ—Å–ª–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –≤–∞—à–µ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞") 
        print("   3. –í–∫–ª—é—á–∏—Ç–µ use_online_stocks –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –æ–Ω–ª–∞–π–Ω —Å–∫–ª–∞–¥–∞–º")
        print("   4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ default_shipment_address –¥–ª—è –∞–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏")
        print("   5. –û—Ç–∫–ª—é—á–∏—Ç–µ use_mock_admin_api –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ–∞–ª—å–Ω—ã—Ö credentials")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_abcp_integration()
