#!/usr/bin/env python
"""
–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API VintTop.ru —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def final_api_test():
    """–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏"""
    
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop.ru...")
    
    try:
        supplier = Supplier.objects.get(name__icontains='vinttop')
        print(f"‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
        print(f"   API URL: {supplier.api_url}")
        print(f"   –õ–æ–≥–∏–Ω: {supplier.api_login}")
        print(f"   –ü–∞—Ä–æ–ª—å: {'*' * len(supplier.api_password)}")
        
    except Supplier.DoesNotExist:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API")
    print(f"="*60)
    
    try:
        success, message = supplier.test_api_connection()
        if success:
            print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ: {message}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {message}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –±—Ä–µ–Ω–¥–æ–≤ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É")
    print(f"="*60)
    
    test_article = "0986424815"  # Bosch –∞—Ä—Ç–∏–∫—É–ª
    print(f"üîé –ü–æ–∏—Å–∫ –±—Ä–µ–Ω–¥–æ–≤ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞: {test_article}")
    
    try:
        success, brands_data = supplier.get_abcp_brands(number=test_article)
        if success:
            print(f"‚úÖ –ë—Ä–µ–Ω–¥—ã –Ω–∞–π–¥–µ–Ω—ã!")
            if isinstance(brands_data, list):
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–µ–Ω–¥–æ–≤: {len(brands_data)}")
                for i, brand in enumerate(brands_data[:3]):
                    brand_name = brand.get('brand', brand.get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'))
                    print(f"   {i+1}. {brand_name}")
            else:
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {brands_data}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {brands_data}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 3: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –∏ –±—Ä–µ–Ω–¥—É")
    print(f"="*60)
    
    test_brand = "BOSCH"
    print(f"üîé –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤: –∞—Ä—Ç–∏–∫—É–ª={test_article}, –±—Ä–µ–Ω–¥={test_brand}")
    
    try:
        success, articles_data = supplier.search_products_by_article(test_article, test_brand)
        if success:
            print(f"‚úÖ –¢–æ–≤–∞—Ä—ã –Ω–∞–π–¥–µ–Ω—ã!")
            if isinstance(articles_data, list):
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(articles_data)}")
                for i, article in enumerate(articles_data[:3]):
                    name = article.get('name', article.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))
                    price = article.get('price', 'N/A')
                    print(f"   {i+1}. {name} - {price}")
            elif isinstance(articles_data, dict):
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç (–æ–±—ä–µ–∫—Ç): {articles_data}")
            else:
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {articles_data}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {articles_data}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 4: –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞")
    print(f"="*60)
    
    print(f"üîé –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞: {test_article} (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –±—Ä–µ–Ω–¥–æ–≤)")
    
    try:
        success, result = supplier.search_products_by_article(test_article)
        if success:
            print(f"‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω!")
            if isinstance(result, list):
                print(f"   –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(result)}")
                for i, item in enumerate(result[:3]):
                    if isinstance(item, dict):
                        name = item.get('name', item.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))
                        price = item.get('price', 'N/A')
                        brand = item.get('brand', 'N/A')
                        print(f"   {i+1}. {name} ({brand}) - {price}")
                    else:
                        print(f"   {i+1}. {item}")
            else:
                print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {result}")
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print(f"\n" + "="*60)
    print(f"üìã –†–ï–ó–Æ–ú–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print(f"="*60)
    print(f"‚úÖ –õ–æ–≥–∏–Ω –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞: {supplier.api_login}")
    print(f"‚úÖ –ú–µ—Ç–æ–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å ABCP API")
    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    print(f"üìù –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –≤—ã—à–µ")

if __name__ == "__main__":
    print("üöÄ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï VINTTOP.RU API")
    print("=" * 60)
    final_api_test()
