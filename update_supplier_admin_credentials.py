#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def update_supplier_credentials():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop"""
    
    print("üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop.ru...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop
        supplier = Supplier.objects.get(name__icontains='vinttop')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name} (ID: {supplier.id})")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        print(f"\nüìä –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        print(f"   API URL: {supplier.api_url}")
        print(f"   –ö–ª–∏–µ–Ω—Ç—Å–∫–∏–π –ª–æ–≥–∏–Ω: {supplier.api_login}")
        print(f"   –ê–¥–º–∏–Ω—Å–∫–∏–π –ª–æ–≥–∏–Ω: {supplier.admin_login or '–ù–ï –ù–ê–°–¢–†–û–ï–ù'}")
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        # –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ –∂–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ –∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç—Å–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
        if not supplier.admin_login:
            supplier.admin_login = supplier.api_login
            print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω—Å–∫–∏–π –ª–æ–≥–∏–Ω: {supplier.admin_login}")
        
        if not supplier.admin_password:
            supplier.admin_password = supplier.api_password
            print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∞–¥–º–∏–Ω—Å–∫–∏–π –ø–∞—Ä–æ–ª—å")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        supplier.save()
        print(f"‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        
        return supplier
        
    except Supplier.DoesNotExist:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ VintTop.ru –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return None

def test_admin_api(supplier):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã API"""
    
    print(f"\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ API...")
    
    # –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö endpoints –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    admin_endpoints = [
        ('cp/managers', '–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏'),
        ('cp/statuses', '–°—Ç–∞—Ç—É—Å—ã –∑–∞–∫–∞–∑–æ–≤'),
        ('cp/users', '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏'),
        ('cp/orders', '–ó–∞–∫–∞–∑—ã'),
    ]
    
    results = {}
    
    for endpoint, description in admin_endpoints:
        print(f"\nüîé –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {description} ({endpoint})")
        try:
            success, data = supplier._make_admin_request(endpoint)
            
            if success:
                print(f"‚úÖ {description}: API –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ")
                if isinstance(data, dict):
                    print(f"   –ö–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç–µ: {list(data.keys())}")
                elif isinstance(data, list):
                    print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤: {len(data)}")
                results[endpoint] = True
            else:
                print(f"‚ùå {description}: {data}")
                results[endpoint] = False
                
        except Exception as e:
            print(f"‚ùå {description}: –ò—Å–∫–ª—é—á–µ–Ω–∏–µ - {e}")
            results[endpoint] = False
    
    return results

if __name__ == "__main__":
    print("üöÄ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ABCP API")
    print("=" * 60)
    
    try:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
        supplier = update_supplier_credentials()
        
        if supplier:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
            results = test_admin_api(supplier)
            
            print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
            print("=" * 40)
            
            success_count = sum(1 for result in results.values() if result)
            total_count = len(results)
            
            for endpoint, success in results.items():
                status = "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" if success else "‚ùå –û—à–∏–±–∫–∞"
                print(f"   {endpoint}: {status}")
            
            print(f"\nüìä –ò—Ç–æ–≥–æ: {success_count}/{total_count} –º–µ—Ç–æ–¥–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç")
            
            if success_count > 0:
                print(f"\n‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π API —á–∞—Å—Ç–∏—á–Ω–æ –∏–ª–∏ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω!")
                print(f"üîß –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–ª–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é:")
                print(f"   python test_vinttop_api.py")
            else:
                print(f"\n‚ö†Ô∏è  –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–π API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
                print(f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
