#!/usr/bin/env python
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API VintTop.ru —Å –ø–æ–ª–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º –∑–∞–ø—Ä–æ—Å–æ–≤
"""
import os
import sys
import django
import requests
import hashlib
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def detailed_api_diagnosis():
    """–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ API —Å –ø–æ–ª–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    
    print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞...")
    
    try:
        supplier = Supplier.objects.get(name__icontains='vinttop')
        print(f"‚úÖ –ü–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
        print(f"   API URL: {supplier.api_url}")
        print(f"   –õ–æ–≥–∏–Ω: {supplier.api_login}")
        print(f"   –ü–∞—Ä–æ–ª—å: {'*' * len(supplier.api_password)}")
        
    except Supplier.DoesNotExist:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    login = supplier.api_login
    password = supplier.api_password
    api_url = supplier.api_url
    
    print(f"\nüîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...")
    print(f"   –ò—Å—Ö–æ–¥–Ω—ã–π –ø–∞—Ä–æ–ª—å: {password}")
    
    # –°–æ–∑–¥–∞–µ–º MD5 —Ö—ç—à –ø–∞—Ä–æ–ª—è
    password_hash = hashlib.md5(password.encode('utf-8')).hexdigest()
    print(f"   MD5 —Ö—ç—à –ø–∞—Ä–æ–ª—è: {password_hash}")
    
    # –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    print(f"="*60)
    
    user_info_url = f"{api_url}/cp/users"
    user_params = {
        'userlogin': login,
        'userpsw': password_hash
    }
    
    print(f"üì§ –ó–∞–ø—Ä–æ—Å:")
    print(f"   URL: {user_info_url}")
    print(f"   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {user_params}")
    
    try:
        response = requests.get(user_info_url, params=user_params, timeout=30)
        print(f"üì• –û—Ç–≤–µ—Ç:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        print(f"   –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"   JSON –¥–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)}")
            except:
                print(f"   –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –±—Ä–µ–Ω–¥–æ–≤
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±—Ä–µ–Ω–¥–æ–≤")
    print(f"="*60)
    
    brands_url = f"{api_url}/search/brands"
    brands_params = {
        'userlogin': login,
        'userpsw': password_hash
    }
    
    print(f"üì§ –ó–∞–ø—Ä–æ—Å:")
    print(f"   URL: {brands_url}")
    print(f"   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {brands_params}")
    
    try:
        response = requests.get(brands_url, params=brands_params, timeout=30)
        print(f"üì• –û—Ç–≤–µ—Ç:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        print(f"   –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text[:500]}...")  # –ü–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—Ä–µ–Ω–¥–æ–≤: {len(data) if isinstance(data, list) else 'N/A'}")
                if isinstance(data, list) and len(data) > 0:
                    print(f"   –ü–µ—Ä–≤—ã–µ 3 –±—Ä–µ–Ω–¥–∞: {data[:3]}")
            except:
                print(f"   –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 3: –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É")
    print(f"="*60)
    
    articles_url = f"{api_url}/search/articles"
    test_article = "0986424815"  # Bosch –∞—Ä—Ç–∏–∫—É–ª
    articles_params = {
        'userlogin': login,
        'userpsw': password_hash,
        'number': test_article
    }
    
    print(f"üì§ –ó–∞–ø—Ä–æ—Å:")
    print(f"   URL: {articles_url}")
    print(f"   –ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {articles_params}")
    
    try:
        response = requests.get(articles_url, params=articles_params, timeout=30)
        print(f"üì• –û—Ç–≤–µ—Ç:")
        print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(response.headers)}")
        print(f"   –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text[:500]}...")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"   JSON –¥–∞–Ω–Ω—ã–µ: {json.dumps(data, indent=2, ensure_ascii=False)[:500]}...")
            except:
                print(f"   –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    print(f"\n" + "="*60)
    print(f"üß™ –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤")
    print(f"="*60)
    
    alternative_endpoints = [
        "/api/cp/users",
        "/cp/user",
        "/api/search/brands",
        "/search/brand",
        "/api/brands",
        "/brands"
    ]
    
    for endpoint in alternative_endpoints:
        test_url = f"{api_url}{endpoint}"
        params = {
            'userlogin': login,
            'userpsw': password_hash
        }
        
        print(f"\nüîó –¢–µ—Å—Ç–∏—Ä—É–µ–º: {test_url}")
        try:
            response = requests.get(test_url, params=params, timeout=10)
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            if response.status_code != 404:
                print(f"   –û—Ç–≤–µ—Ç: {response.text[:100]}...")
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞: {e}")
    
    print(f"\n" + "="*60)
    print(f"üìã –†–ï–ó–Æ–ú–ï –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò")
    print(f"="*60)
    print(f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã")
    print(f"‚úÖ MD5 —Ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–æ") 
    print(f"‚úÖ –ó–∞–ø—Ä–æ—Å—ã –∫ —Ä–∞–∑–ª–∏—á–Ω—ã–º —ç–Ω–¥–ø–æ–∏–Ω—Ç–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã")
    print(f"üìù –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –æ—Ç–≤–µ—Ç—ã –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º")

if __name__ == "__main__":
    print("üîç –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê API VINTTOP.RU")
    print("=" * 60)
    detailed_api_diagnosis()
