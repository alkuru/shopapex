#!/usr/bin/env python
"""
–î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –∫ ABCP API
–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏ —Ñ–æ—Ä–º–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–æ–≤
"""

import os
import sys
import django
import hashlib
import requests
import json
from urllib.parse import urljoin

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier

def md5_hash(text):
    """–°–æ–∑–¥–∞–Ω–∏–µ MD5 —Ö—ç—à–∞ –¥–ª—è –ø–∞—Ä–æ–ª—è"""
    return hashlib.md5(text.encode('utf-8')).hexdigest()

def test_abcp_request(supplier, endpoint, params, description):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –∫ ABCP API"""
    print(f"\nüîç {description}")
    print("=" * 50)
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º URL
    url = urljoin(supplier.api_url.rstrip('/') + '/', endpoint.lstrip('/'))
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
    request_data = {
        'userlogin': supplier.api_login,
        'userpsw': md5_hash(supplier.api_password),
        **params
    }
    
    print(f"URL: {url}")
    print(f"–ü–∞—Ä–∞–º–µ—Ç—Ä—ã: {json.dumps(request_data, indent=2, ensure_ascii=False)}")
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º POST –∑–∞–ø—Ä–æ—Å
        response = requests.post(
            url,
            data=request_data,
            timeout=30,
            headers={
                'Content-Type': 'application/x-www-form-urlencoded',
                'User-Agent': 'ShopApex/1.0'
            }
        )
        
        print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"–ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
        
        if response.status_code == 200:
            try:
                data = response.json()
                print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç:")
                print(json.dumps(data, indent=2, ensure_ascii=False))
                return True, data
            except json.JSONDecodeError:
                print(f"‚ö†Ô∏è –û—Ç–≤–µ—Ç –Ω–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:")
                print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {response.text[:500]}...")
                return False, response.text
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ HTTP {response.status_code}")
            print(f"–°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞: {response.text}")
            return False, None
            
    except requests.RequestException as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {e}")
        return False, None

def main():
    print("üöÄ –î–ï–¢–ê–õ–¨–ù–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê ABCP API")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    try:
        supplier = Supplier.objects.get(name="VintTop.ru")
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name}")
        print(f"   API URL: {supplier.api_url}")
        print(f"   –õ–æ–≥–∏–Ω: {supplier.api_login}")
        print(f"   –ü–∞—Ä–æ–ª—å (MD5): {md5_hash(supplier.api_password)}")
    except Supplier.DoesNotExist:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ VintTop.ru –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (brands)
    test_abcp_request(
        supplier,
        '/search/brands/',
        {},
        "–¢–ï–°–¢ 1: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –±—Ä–µ–Ω–¥–æ–≤ (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏)"
    )
    
    # –¢–µ—Å—Ç 2: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    test_abcp_request(
        supplier,
        '/cp/userinfo/',
        {},
        "–¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ"
    )
    
    # –¢–µ—Å—Ç 3: –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É
    test_abcp_request(
        supplier,
        '/search/articles/',
        {
            'number': '0986424558',  # –¢–µ—Å—Ç–æ–≤—ã–π –∞—Ä—Ç–∏–∫—É–ª Bosch
            'brand': 'BOSCH'
        },
        "–¢–ï–°–¢ 3: –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É"
    )
    
    # –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –±–µ–∑ –±—Ä–µ–Ω–¥–∞
    test_abcp_request(
        supplier,
        '/search/articles/',
        {
            'number': '0986424558'
        },
        "–¢–ï–°–¢ 4: –ü–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –±–µ–∑ —É–∫–∞–∑–∞–Ω–∏—è –±—Ä–µ–Ω–¥–∞"
    )
    
    # –¢–µ—Å—Ç 5: –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤
    test_abcp_request(
        supplier,
        '/search/articles/',
        {
            'number': '0986424558',
            'brand': 'BOSCH',
            'use_online_analogs': '1'
        },
        "–¢–ï–°–¢ 5: –ü–æ–∏—Å–∫ —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏"
    )

if __name__ == "__main__":
    main()
