#!/usr/bin/env python3
"""
–ü–æ–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤ –¥–ª—è –∞—Ä—Ç–∏–∫—É–ª–∞ C15300
"""

import requests
import json

def test_missing_brands():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤"""
    print("=== –ü–æ–∏—Å–∫ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤ ===")
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã API
    API_URL = 'https://newapi.auto-sputnik.ru'
    LOGIN = '89219520754'
    PASSWORD = '89219520754'
    
    # –ù–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±—Ä–µ–Ω–¥—ã
    missing_brands = [
        'MANDO', 'MFILTER', 'MTF LIGHT', 'NORDFIL', 'PROFI', 'REDSKIN', 
        'S&K', 'STAL', 'STELLOX', 'TESLA TECHNICS', 'TOPCOVER', 'UFI', 'ZENTPARTS'
    ]
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
        print("1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞...")
        token_url = f'{API_URL}/users/login'
        token_data = {'login': LOGIN, 'password': PASSWORD}
        token_resp = requests.post(token_url, json=token_data, timeout=10)
        token_resp.raise_for_status()
        token = token_resp.json().get('token')
        if not token:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω")
            return
        print("‚úÖ –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω")
        
        # –î–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
        print("\n2. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∑–∞–ø—Ä–æ—Å–∞...")
        search_url = f'{API_URL}/products/getproducts'
        headers = {'Authorization': f'Bearer {token}', 'Content-Type': 'application/json'}
        
        # –¢–µ—Å—Ç 1: –ó–∞–ø—Ä–æ—Å —Ç–æ–ª—å–∫–æ –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É –±–µ–∑ –±—Ä–µ–Ω–¥–∞
        print("\n--- –¢–µ—Å—Ç 1: –¢–æ–ª—å–∫–æ –∞—Ä—Ç–∏–∫—É–ª C15300 ---")
        payload1 = {
            "articul": "c15300",
            "analogi": True,
            "tranzit": True
        }
        
        response1 = requests.post(search_url, json=payload1, headers=headers, timeout=15)
        if response1.status_code == 200:
            data1 = response1.json()
            items1 = data1.get('data', [])
            brands1 = set(item.get("brand", {}).get("name", "") for item in items1 if item.get("brand", {}).get("name", ""))
            print(f"‚úÖ –¢–æ–≤–∞—Ä–æ–≤: {len(items1)}")
            print(f"üè∑Ô∏è –ë—Ä–µ–Ω–¥–æ–≤: {len(brands1)}")
            print(f"üîç –ë—Ä–µ–Ω–¥—ã: {sorted(brands1)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±—Ä–µ–Ω–¥—ã
            found_missing = [brand for brand in missing_brands if brand in brands1]
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤: {len(found_missing)}")
            if found_missing:
                print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ: {found_missing}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response1.status_code}")
        
        # –¢–µ—Å—Ç 2: –ó–∞–ø—Ä–æ—Å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–≥–æ –±—Ä–µ–Ω–¥–∞ –æ—Ç–¥–µ–ª—å–Ω–æ
        print("\n--- –¢–µ—Å—Ç 2: –ü–æ–∏—Å–∫ –ø–æ –∫–∞–∂–¥–æ–º—É –Ω–µ–¥–æ—Å—Ç–∞—é—â–µ–º—É –±—Ä–µ–Ω–¥—É ---")
        found_brands = []
        
        for brand in missing_brands:
            payload2 = {
                "articul": "c15300",
                "brand": brand,
                "analogi": True,
                "tranzit": True
            }
            
            try:
                response2 = requests.post(search_url, json=payload2, headers=headers, timeout=10)
                if response2.status_code == 200:
                    data2 = response2.json()
                    items2 = data2.get('data', [])
                    if items2:
                        found_brands.append(brand)
                        print(f"‚úÖ {brand}: {len(items2)} —Ç–æ–≤–∞—Ä–æ–≤")
                    else:
                        print(f"‚ùå {brand}: –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤")
                else:
                    print(f"‚ùå {brand}: –æ—à–∏–±–∫–∞ {response2.status_code}")
            except Exception as e:
                print(f"‚ùå {brand}: –æ—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ - {e}")
        
        print(f"\nüìä –ò—Ç–æ–≥–æ –Ω–∞–π–¥–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤: {len(found_brands)}")
        if found_brands:
            print(f"üîç –ù–∞–π–¥–µ–Ω–Ω—ã–µ: {found_brands}")
        
        # –¢–µ—Å—Ç 3: –ü–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–∏–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∞—Ä—Ç–∏–∫—É–ª–∞
        print("\n--- –¢–µ—Å—Ç 3: –í–∞—Ä–∏–∞–Ω—Ç—ã –∞—Ä—Ç–∏–∫—É–ª–∞ ---")
        article_variants = ["C15300", "c15300", "C-15300", "C_15300", "15300"]
        
        for variant in article_variants:
            payload3 = {
                "articul": variant,
                "brand": "MANN-FILTER",
                "analogi": True,
                "tranzit": True
            }
            
            try:
                response3 = requests.post(search_url, json=payload3, headers=headers, timeout=10)
                if response3.status_code == 200:
                    data3 = response3.json()
                    items3 = data3.get('data', [])
                    brands3 = set(item.get("brand", {}).get("name", "") for item in items3 if item.get("brand", {}).get("name", ""))
                    missing_found = [brand for brand in missing_brands if brand in brands3]
                    if missing_found:
                        print(f"‚úÖ {variant}: –Ω–∞–π–¥–µ–Ω–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤ {len(missing_found)} - {missing_found}")
                    else:
                        print(f"‚ùå {variant}: –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –±—Ä–µ–Ω–¥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                else:
                    print(f"‚ùå {variant}: –æ—à–∏–±–∫–∞ {response3.status_code}")
            except Exception as e:
                print(f"‚ùå {variant}: –æ—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ - {e}")
        
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    test_missing_brands() 