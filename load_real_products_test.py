#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ ABCP API
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
django.setup()

from catalog.models import Supplier, Product, Brand, ProductCategory
from django.db import transaction

def load_real_products():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ ABCP API"""
    
    print("üîç –ü–æ–∏—Å–∫ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞ VintTop.ru...")
    
    try:
        supplier = Supplier.objects.get(name__icontains='vinttop')
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω –ø–æ—Å—Ç–∞–≤—â–∏–∫: {supplier.name} (ID: {supplier.id})")
        
    except Supplier.DoesNotExist:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ VintTop.ru –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    print(f"\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –ø–æ–ø—É–ª—è—Ä–Ω—ã–º –∞—Ä—Ç–∏–∫—É–ª–∞–º...")
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_articles = [
        "0986424815",  # Bosch —Ç–æ—Ä–º–æ–∑–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏
        "1987949678",  # Bosch —Ñ–∏–ª—å—Ç—Ä
        "BP1234",      # –û–±—â–∏–π –∞—Ä—Ç–∏–∫—É–ª
        "GF456",       # –¢–µ—Å—Ç
        "MANN",        # –ü–æ –±—Ä–µ–Ω–¥—É
        "oil",         # –ü–æ –∫–ª—é—á–µ–≤–æ–º—É —Å–ª–æ–≤—É
        "brake",       # –¢–æ—Ä–º–æ–∑–∞
        "filter",      # –§–∏–ª—å—Ç—Ä—ã
        "spark",       # –°–≤–µ—á–∏
        "light"        # –§–∞—Ä—ã
    ]
    
    all_products = []
    
    for article in test_articles:
        print(f"\nüîé –ü–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É: '{article}'")
        try:
            success, result = supplier.search_products_by_article(article)
            
            if success and isinstance(result, list) and len(result) > 0:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ: {len(result)} —Ç–æ–≤–∞—Ä–æ–≤")
                
                # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 —Ç–æ–≤–∞—Ä–∞ –∏–∑ –∫–∞–∂–¥–æ–≥–æ –ø–æ–∏—Å–∫–∞
                for item in result[:2]:
                    if isinstance(item, dict) and item not in all_products:
                        all_products.append(item)
                        print(f"      + –î–æ–±–∞–≤–ª–µ–Ω: {item.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')[:50]}...")
                        
                        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                        if len(all_products) >= 10:
                            break
            else:
                print(f"   ‚ö†Ô∏è  –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
        
        # –ï—Å–ª–∏ –Ω–∞–±—Ä–∞–ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤, –≤—ã—Ö–æ–¥–∏–º
        if len(all_products) >= 10:
            break
    
    print(f"\nüì¶ –°–æ–±—Ä–∞–Ω–æ {len(all_products)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
    
    if not all_products:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
        return False
    
    print(f"\nüíæ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    test_category, created = ProductCategory.objects.get_or_create(
        name="–¢–µ—Å—Ç–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã ABCP",
        defaults={
            'description': '–¢–æ–≤–∞—Ä—ã –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ ABCP API',
            'is_active': True,
            'order': 0
        }
    )
    
    if created:
        print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è: {test_category.name}")
    
    loaded_count = 0
    updated_count = 0
    
    with transaction.atomic():
        for item_data in all_products:
            try:
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–∞
                article = item_data.get('number', item_data.get('code', f'ART-{loaded_count}'))
                name = item_data.get('name', item_data.get('title', '–¢–æ–≤–∞—Ä –±–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))
                brand_name = item_data.get('brand', 'NoName')
                price = float(item_data.get('price', 0))
                
                # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –ø–æ–ª—É—á–∞–µ–º –±—Ä–µ–Ω–¥
                brand, created = Brand.objects.get_or_create(
                    name=brand_name,
                    defaults={'is_active': True}
                )
                
                # –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä
                product, created = Product.objects.update_or_create(
                    article=article,
                    defaults={
                        'name': name[:300],  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É
                        'category': test_category,
                        'brand': brand,
                        'price': price,
                        'stock_quantity': 10,  # –¢–µ—Å—Ç–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                        'is_active': True,
                        'primary_supplier': supplier,
                        'description': f'–¢–æ–≤–∞—Ä –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ ABCP API –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è. –î–∞–Ω–Ω—ã–µ: {item_data}'
                    }
                )
                
                if created:
                    loaded_count += 1
                    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–≤–∞—Ä: {article} - {name[:50]}...")
                else:
                    updated_count += 1
                    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–≤–∞—Ä: {article} - {name[:50]}...")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–∞: {e}")
                continue
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢ –ó–ê–ì–†–£–ó–ö–ò:")
    print(f"   ‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {loaded_count}")
    print(f"   üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤: {updated_count}")
    print(f"   üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {loaded_count + updated_count}")
    
    return loaded_count + updated_count > 0

def test_product_search():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤"""
    
    print(f"\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê –ó–ê–ì–†–£–ñ–ï–ù–ù–´–• –¢–û–í–ê–†–û–í")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
    products = Product.objects.filter(
        primary_supplier__name__icontains='vinttop'
    ).select_related('brand', 'category')[:10]
    
    if not products:
        print("‚ùå –ù–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ {products.count()} —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ")
    
    for product in products:
        print(f"\nüìù –¢–æ–≤–∞—Ä: {product.name}")
        print(f"   üè∑Ô∏è  –ê—Ä—Ç–∏–∫—É–ª: {product.article}")
        print(f"   üè≠ –ë—Ä–µ–Ω–¥: {product.brand.name}")
        print(f"   üí∞ –¶–µ–Ω–∞: {product.price} —Ä—É–±.")
        print(f"   üì¶ –û—Å—Ç–∞—Ç–æ–∫: {product.stock_quantity}")
        print(f"   ‚úÖ –ê–∫—Ç–∏–≤–µ–Ω: {'–î–∞' if product.is_active else '–ù–µ—Ç'}")
    
    print(f"\nüîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê –ß–ï–†–ï–ó API")
    print("-" * 40)
    
    supplier = products.first().primary_supplier
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫ –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
    for product in products[:3]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 –¥–ª—è —Ç–µ—Å—Ç–∞
        print(f"\nüîé –ü–æ–∏—Å–∫ –≤ API –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É: {product.article}")
        try:
            success, result = supplier.search_products_by_article(product.article)
            
            if success and isinstance(result, list):
                found_count = len(result)
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –≤ API: {found_count} —Ç–æ–≤–∞—Ä–æ–≤")
                
                if found_count > 0:
                    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ç–æ–≤–∞—Ä
                    first_item = result[0]
                    if isinstance(first_item, dict):
                        api_name = first_item.get('name', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
                        api_price = first_item.get('price', 'N/A')
                        api_brand = first_item.get('brand', 'N/A')
                        
                        print(f"   üìã API —Ç–æ–≤–∞—Ä: {api_name}")
                        print(f"   üí∞ API —Ü–µ–Ω–∞: {api_price}")
                        print(f"   üè≠ API –±—Ä–µ–Ω–¥: {api_brand}")
                        
                        # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                        print(f"   üîÑ –õ–æ–∫–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä: {product.name}")
                        print(f"   üí∞ –õ–æ–∫–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞: {product.price}")
                        print(f"   üè≠ –õ–æ–∫–∞–ª—å–Ω—ã–π –±—Ä–µ–Ω–¥: {product.brand.name}")
                        
                        if str(api_price) != str(product.price):
                            print(f"   ‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –¶–µ–Ω—ã –æ—Ç–ª–∏—á–∞—é—Ç—Å—è!")
            else:
                print(f"   ‚ùå –¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ API: {result}")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
    
    return True

def show_admin_urls():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–µ–∑–Ω—ã–µ URL –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏"""
    
    print(f"\nüîó –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò –î–õ–Ø –†–ê–ë–û–¢–´ –° –¢–û–í–ê–†–ê–ú–ò:")
    print("=" * 60)
    print(f"üìä –¢–æ–≤–∞—Ä—ã –≤ –∞–¥–º–∏–Ω–∫–µ:")
    print(f"   http://127.0.0.1:8000/admin/catalog/product/")
    print(f"üìã –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤:")
    print(f"   http://127.0.0.1:8000/admin/catalog/productcategory/")
    print(f"üè≠ –ë—Ä–µ–Ω–¥—ã:")
    print(f"   http://127.0.0.1:8000/admin/catalog/brand/")
    print(f"üîß –ü–æ—Å—Ç–∞–≤—â–∏–∫ VintTop:")
    print(f"   http://127.0.0.1:8000/admin/catalog/supplier/4/change/")
    print(f"üåê –ö–∞—Ç–∞–ª–æ–≥ –Ω–∞ —Å–∞–π—Ç–µ:")
    print(f"   http://127.0.0.1:8000/catalog/")
    print(f"üîç –ü–æ–∏—Å–∫ –Ω–∞ —Å–∞–π—Ç–µ:")
    print(f"   http://127.0.0.1:8000/catalog/search/")

if __name__ == "__main__":
    print("üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ ABCP API")
    print("=" * 60)
    
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        if load_real_products():
            print(f"\n‚úÖ –¢–û–í–ê–†–´ –£–°–ü–ï–®–ù–û –ó–ê–ì–†–£–ñ–ï–ù–´!")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
            if test_product_search():
                print(f"\n‚úÖ –ü–û–ò–°–ö –ü–†–û–¢–ï–°–¢–ò–†–û–í–ê–ù –£–°–ü–ï–®–ù–û!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏
            show_admin_urls()
            
            print(f"\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
            print(f"üìù –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏")
            
        else:
            print(f"\n‚ùå –û–®–ò–ë–ö–ê –ó–ê–ì–†–£–ó–ö–ò –¢–û–í–ê–†–û–í")
            print(f"üîß –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API")
            
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
