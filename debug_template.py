#!/usr/bin/env python

def debug_template():
    """–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —à–∞–±–ª–æ–Ω–∞"""
    
    print("üîç –î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —à–∞–±–ª–æ–Ω–∞...")
    
    try:
        with open('/tmp/test_search.html', 'r', encoding='utf-8') as f:
            html_content = f.read()
        
        # –ò—â–µ–º –≤—Å–µ –≤—Ö–æ–∂–¥–µ–Ω–∏—è strong —Ç–µ–≥–æ–≤
        lines = html_content.split('\n')
        strong_lines = []
        
        for i, line in enumerate(lines):
            if '<strong' in line:
                strong_lines.append((i+1, line.strip()))
        
        print(f"\nüìù –ù–∞–π–¥–µ–Ω–æ {len(strong_lines)} —Ç–µ–≥–æ–≤ <strong>:")
        for line_num, line in strong_lines:
            print(f"   –°—Ç—Ä–æ–∫–∞ {line_num}: {line}")
        
        # –ò—â–µ–º —Å—Ç—Ä–æ–∫–∏ —Å Mann
        mann_lines = []
        for i, line in enumerate(lines):
            if 'Mann' in line:
                mann_lines.append((i+1, line.strip()))
        
        print(f"\nüìù –ù–∞–π–¥–µ–Ω–æ {len(mann_lines)} —Å—Ç—Ä–æ–∫ —Å 'Mann':")
        for line_num, line in mann_lines[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"   –°—Ç—Ä–æ–∫–∞ {line_num}: {line}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ class="brand-mann" –≤ HTML
        if 'class="brand-mann"' in html_content:
            print("\n‚úÖ –ù–∞–π–¥–µ–Ω–æ class=\"brand-mann\" –≤ HTML")
        else:
            print("\n‚ùå class=\"brand-mann\" –ù–ï –Ω–∞–π–¥–µ–Ω –≤ HTML")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ class='brand-mann' –≤ HTML
        if "class='brand-mann'" in html_content:
            print("‚úÖ –ù–∞–π–¥–µ–Ω–æ class='brand-mann' –≤ HTML")
        else:
            print("‚ùå class='brand-mann' –ù–ï –Ω–∞–π–¥–µ–Ω –≤ HTML")
        
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª /tmp/test_search.html –Ω–µ –Ω–∞–π–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == '__main__':
    debug_template() 