#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product, ProductAnalog
    from catalog.supplier_models import Supplier
    
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê –ê–ù–ê–õ–û–ì–û–í")
    print("=" * 50)
    
    # –ë–µ—Ä–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_products = Product.objects.all()[:5]
    
    print("üìã –¢–û–í–ê–†–´ –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    for i, product in enumerate(test_products, 1):
        print(f"   {i}. {product.article} - {product.brand.name} - {product.name}")
    
    print("\nüîß –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–ò–°–ö–ê –ê–ù–ê–õ–û–ì–û–í:")
    print("-" * 40)
    
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    supplier = Supplier.objects.first()
    if not supplier:
        print("‚ùå –ü–æ—Å—Ç–∞–≤—â–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ")
        sys.exit(1)
    
    for product in test_products:
        print(f"\nüîç –ü–æ–∏—Å–∫ –∞–Ω–∞–ª–æ–≥–æ–≤ –¥–ª—è {product.article}:")
        print(f"   –¢–æ–≤–∞—Ä: {product.name}")
        print(f"   –ë—Ä–µ–Ω–¥: {product.brand.name}")
        print(f"   –ö–∞—Ç–µ–≥–æ—Ä–∏—è: {product.category.name}")
        
        # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∞–Ω–∞–ª–æ–≥–∏ —á–µ—Ä–µ–∑ API
        try:
            analogs_result = supplier.get_product_analogs(product.article)
            print(f"   API –æ—Ç–≤–µ—Ç: {analogs_result}")
            
            if isinstance(analogs_result, list) and analogs_result:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ –∞–Ω–∞–ª–æ–≥–æ–≤ —á–µ—Ä–µ–∑ API: {len(analogs_result)}")
                for analog in analogs_result[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    if isinstance(analog, dict):
                        print(f"     - {analog.get('article', '–ù–ï–¢')} ({analog.get('brand', '–ù–ï–¢')})")
            else:
                print(f"   ‚ÑπÔ∏è  API –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–µ –≤–µ—Ä–Ω—É–ª –∏–ª–∏ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ API: {e}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∞–Ω–∞–ª–æ–≥–∏ –≤ –±–∞–∑–µ
        local_analogs = ProductAnalog.objects.filter(product=product)
        if local_analogs.exists():
            print(f"   ‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–æ–≤: {local_analogs.count()}")
            for analog in local_analogs:
                print(f"     - {analog.analog_product.article} ({analog.analog_product.brand.name})")
        else:
            print(f"   ‚ÑπÔ∏è  –õ–æ–∫–∞–ª—å–Ω—ã—Ö –∞–Ω–∞–ª–æ–≥–æ–≤ –Ω–µ—Ç")
    
    print("\nüìä –û–ë–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
    print("-" * 25)
    print(f"   –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {Product.objects.count()}")
    print(f"   –í—Å–µ–≥–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {ProductAnalog.objects.count()}")
    print(f"   –¢–æ–≤–∞—Ä–æ–≤ —Å –∞–Ω–∞–ª–æ–≥–∞–º–∏: {Product.objects.filter(analogs__isnull=False).distinct().count()}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –∞—Ä—Ç–∏–∫—É–ª–æ–≤
    print("\nüéØ –ü–†–û–í–ï–†–ö–ê –ü–û–ü–£–õ–Ø–†–ù–´–• –ê–†–¢–ò–ö–£–õ–û–í:")
    print("-" * 35)
    
    popular_articles = ['FL1099', 'BK1085', 'CV1093', 'SP1091', 'WP1090']
    
    for article in popular_articles:
        try:
            product = Product.objects.get(article=article)
            print(f"   {article}: {product.brand.name} - {product.name[:40]}...")
        except Product.DoesNotExist:
            print(f"   {article}: –ù–ï –ù–ê–ô–î–ï–ù")
    
    print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
