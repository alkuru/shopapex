#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç API –ø–æ–∏—Å–∫–∞ –∞–Ω–∞–ª–æ–≥–æ–≤
"""

import os
import sys
import django
import json

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.supplier_models import Supplier
    
    print("üéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ API –ü–û–ò–°–ö–ê –ê–ù–ê–õ–û–ì–û–í")
    print("=" * 50)
    
    # –ù–∞–π–¥–µ–º –ª—é–±–æ–≥–æ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
    suppliers = Supplier.objects.filter(is_active=True)
    if not suppliers.exists():
        print("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –≤ –±–∞–∑–µ")
        sys.exit(1)
        
    supplier = suppliers.first()
    print(f"‚úÖ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞: {supplier.name}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    test_cases = [
        {
            'name': '–ù–æ—Ä–º–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π',
            'article': 'BRP1234',
            'brand': 'BOSCH'
        },
        {
            'name': '–ü—É—Å—Ç–æ–π –∞—Ä—Ç–∏–∫—É–ª',
            'article': '',
            'brand': 'BOSCH'
        },
        {
            'name': '–ë–µ–∑ –±—Ä–µ–Ω–¥–∞',
            'article': 'TEST123',
            'brand': ''
        }
    ]
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\n{i}. –¢–µ—Å—Ç: {test_case['name']}")
        print(f"   –ê—Ä—Ç–∏–∫—É–ª: '{test_case['article']}'")
        print(f"   –ë—Ä–µ–Ω–¥: '{test_case['brand']}'")
        
        try:
            result = supplier.get_product_analogs(
                article_code=test_case['article'],
                brand_name=test_case['brand']
            )
            
            print(f"   ‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: success={result.get('success', False)}")
            if result.get('success'):
                analogs = result.get('analogs', [])
                print(f"   üìä –ù–∞–π–¥–µ–Ω–æ –∞–Ω–∞–ª–æ–≥–æ–≤: {len(analogs)}")
                if analogs:
                    print(f"   üîç –ü–µ—Ä–≤—ã–π –∞–Ω–∞–ª–æ–≥: {analogs[0].get('article', 'N/A')}")
            else:
                print(f"   ‚ö†Ô∏è  –û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
                
        except Exception as e:
            print(f"   ‚ùå –ò–°–ö–õ–Æ–ß–ï–ù–ò–ï: {type(e).__name__}: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù!")
    print("‚úÖ –ú–µ—Ç–æ–¥ get_product_analogs —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –í—Å–µ –∑–∞—â–∏—Ç–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –º–µ—Å—Ç–µ")
    print("‚úÖ –û—à–∏–±–∫–∞ 'str' object has no attribute 'get' –ò–°–ü–†–ê–í–õ–ï–ù–ê!")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}")
    import traceback
    traceback.print_exc()
