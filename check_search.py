#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'shopapex_project.settings')
sys.path.append('.')

try:
    django.setup()
    from catalog.models import Product
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –ü–û–ò–°–ö–ê –¢–û–í–ê–†–û–í")
    print("=" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Ç–æ–≤–∞—Ä K20PBR-S10
    article = "K20PBR-S10"
    
    # –¢–æ—á–Ω—ã–π –ø–æ–∏—Å–∫
    exact_product = Product.objects.filter(article=article).first()
    if exact_product:
        print(f"‚úÖ –¢–æ–≤–∞—Ä –Ω–∞–π–¥–µ–Ω —Ç–æ—á–Ω—ã–º –ø–æ–∏—Å–∫–æ–º: {exact_product.article}")
        print(f"   –ù–∞–∑–≤–∞–Ω–∏–µ: {exact_product.name}")
        print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {exact_product.is_active}")
        print(f"   ID: {exact_product.id}")
    else:
        print(f"‚ùå –¢–æ–≤–∞—Ä {article} –Ω–µ –Ω–∞–π–¥–µ–Ω —Ç–æ—á–Ω—ã–º –ø–æ–∏—Å–∫–æ–º")
    
    # –ü–æ–∏—Å–∫ —Å icontains
    similar_products = Product.objects.filter(article__icontains="K20PBR").all()
    print(f"\nüìä –ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã (—Å–æ–¥–µ—Ä–∂–∞—Ç K20PBR): {similar_products.count()}")
    for product in similar_products:
        print(f"   - {product.article}: {product.name} (–∞–∫—Ç–∏–≤–µ–Ω: {product.is_active})")
    
    # –ü–æ–∏—Å–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
    name_search = Product.objects.filter(name__icontains="K20PBR").all()
    print(f"\nüìä –ü–æ–∏—Å–∫ –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ (K20PBR): {name_search.count()}")
    for product in name_search:
        print(f"   - {product.article}: {product.name}")
    
    # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —Ç–æ–≤–∞—Ä—ã —Å Unknown –±—Ä–µ–Ω–¥–æ–º
    unknown_products = Product.objects.filter(brand__name="Unknown").all()
    print(f"\nüìä –¢–æ–≤–∞—Ä—ã —Å –±—Ä–µ–Ω–¥–æ–º Unknown: {unknown_products.count()}")
    for product in unknown_products[:5]:
        print(f"   - {product.article}: {product.name} (–∞–∫—Ç–∏–≤–µ–Ω: {product.is_active})")
    
except Exception as e:
    print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
